1) How to create DB?
Ans) We create db go to mysql power cell or cmd
       CREATE DATABASE database_name;






1) What is Schema?
Ans) Schema is simply name of Database, if you select any database name it means you select schema






2) How to find Current Database Name where we work Currently ?
Ans) Having 2 Types :-

                select database();
                +-------------------+
                | database()        |
                +-------------------+
                | abhishek_tutorial |
                +-------------------+

                or

                status;
                --------------
                C:\Program Files\MySQL\MySQL Server 8.0\bin\mysql.exe  Ver 8.0.22 for Win64 on x86_64 (MySQL Community Server - GPL)

                Connection id:          22
                Current database:       abhishek_tutorial
                Current user:           root@localhost
                SSL:                    Cipher in use is TLS_AES_256_GCM_SHA384
                Using delimiter:        ;
                Server version:         8.0.22 MySQL Community Server - GPL
                Protocol version:       10
                Connection:             localhost via TCP/IP
                Server characterset:    utf8mb4
                Db     characterset:    utf8mb4
                Client characterset:    utf8mb4
                Conn.  characterset:    utf8mb4
                TCP port:               3306
                Binary data as:         Hexadecimal
                Uptime:                 7 days 16 hours 34 min 11 sec

                Threads: 2  Questions: 771  Slow queries: 0  Opens: 362  Flush tables: 3  Open tables: 258  Queries per second avg: 0.001
                --------------






2) How to use DB?
Ans) We use db go to mysql power cell or cmd
       USE database_name;







3) What is Constraint ?

CONSTRAINT :- MySQL CONSTRAINT is used to define rules to allow or restrict what values can be stored in columns. The purpose of inducing constraints is to enforce the integrity of a database.
              MySQL CONSTRAINTS are used to limit the type of data that can be inserted into a table.
              MySQL CONSTRAINTS can be classified into two types - column level and table level.
              The column level constraints can apply only to one column where as table level constraints are applied to the entire table.
              MySQL CONSTRAINT is declared at the time of creating a table.

        Type of MySQL CONSTRAINTs are :

                                NOT NULL
                                UNIQUE
                                PRIMARY KEY
                                FOREIGN KEY
                                CHECK
                                DEFAULT


CONSTRAINT	                                         DESCRIPTION

NOT NULL	                     In MySQL NOT NULL constraint allows to specify that a column can not contain any NULL value.
                                     MySQL NOT NULL can be used to CREATE and ALTER a table.

UNIQUE KEY	                     The UNIQUE constraint in MySQL does not allow to insert a duplicate value in a column.
                                  The UNIQUE constraint maintains the uniqueness of a column in a table. More than one
                                    UNIQUE column can be used in a table.

PRIMARY KEY	                     A PRIMARY KEY constraint for a table enforces the table to accept unique data for a
                                  specific column and this constraint creates a unique index for accessing the table faster.

FOREIGN KEY	                     A FOREIGN KEY in MySQL creates a link between two tables by one specific column of both
                                    tables. The specified column in one table must be a PRIMARY KEY and referred by the
                                      column of another table known as FOREIGN KEY.

CHECK	                         A CHECK constraint controls the values in the associated column. The CHECK constraint
                                     determines whether the value is valid or not from a logical expression.

DEFAULT	                         In a MySQL table, each column must contain a value ( including a NULL). While inserting
                                   data into a table, if no value is supplied to a column, then the column gets the
                                      value set as DEFAULT.








3) How to create Table?
Ans) We use create go to mysql power cell or cmd
       CREATE TABLE table_name;

       create table pratikshat
       (
       emp_id int (20) Not Null auto_increment Primary Key ,
       emp_name varchar (50) Not Null Unique key,
       emp_dept varchar (50),
       emp_sal int (20),
       emp_joining Date,
       emp_cell varchar (50) Not Null Unique key,
       emp_address text Not Null
       );



3) Agar kissi table ko create karte time value ko default set karna ho tab kya karenge?
Ans) By Using DEFAULT KEYWORD :-
            create table abhishek_demo
            (
            tech_id int not null auto_increment primary key,
            stu_name varchar (50) default "unknown",
            stu_address text
            );

            desc abhishek_demo;
            +-------------+-------------+------+-----+---------+----------------+
            | Field       | Type        | Null | Key | Default | Extra          |
            +-------------+-------------+------+-----+---------+----------------+
            | tech_id     | int         | NO   | PRI | NULL    | auto_increment |
            | stu_name    | varchar(50) | YES  |     | unknown |                |
            | stu_address | text        | YES  |     | NULL    |                |
            +-------------+-------------+------+-----+---------+----------------+




4) How to USE/DESCRIBE Table?
Ans) We use create go to mysql power cell or cmd
       First create db if not have any db in mysql sys than after Use db
       USE database_name;
       Enter
       First create table if not have any table in database than after DESC keyword used and open table
       DESC table_name;











4) Agar hamko Kissi Table me NULL value ko replace karke value ko insert karna ho like Fname and LName and @gmail.com
   ye add karna ho tab kese karenge?
Ans)








4) Jab hmko kissi Table ke "A" ya kissi other letter ke name ko search karna ho tab kya karenge ?
Ans) By Using SubString Method

select * from pratikshat where substring(emp_name,1,1) = "A";
+--------+----------+----------------+---------+-------------+------------+-------------+
| emp_id | emp_name | emp_dept       | emp_sal | emp_joining | emp_cell   | emp_address |
+--------+----------+----------------+---------+-------------+------------+-------------+
|    102 | Ankit    | General Mn.    | 1000000 | 2012-10-05  | 94774544   | Delhi       |
|    104 | Abhshek  | Python-Django  |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
|    109 | Adib     | Java           |   35000 | 2016-04-22  | 7474586    | Jaipur      |
|    111 | Avinash  | IOT            |    8000 | 2020-10-22  | 557864556  | Mumbai      |
|    112 | Abhshek  | Python-Machine |   25000 | 2017-03-22  | 6665478    | Agar        |
+--------+----------+----------------+---------+-------------+------------+-------------+








5) How to SHOW/APPEAR DATABASES/TABLES?
Ans) We use create go to mysql power cell or cmd
       show databases;
       Enter
       show tables;







6) What is Delete and how to use this concept on ,ySQL Server?
Ans)

                Ex :- delete from artifiq_emp where emp_id=6;   jab ham mysql server me kissi single rows ko delete karte hai tab jo row del hota hai uska space table me new entry ka data nhi le skta hai
                select * from artifiq_emp;     # table me 4 aur 6 ka rows del hua hai iss liye dusra koi bhi entry uski jagah nhi leta hai but jab developer wo jagah kissi aur entry ke liye detsa hai tab new record waha par insert hota hai
                +--------+---------------+-----------------+-------------+------------+-------------+
                | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
                +--------+---------------+-----------------+-------------+------------+-------------+
                |      1 | abhshek kumar | python-django   | 2020-07-22  | 9415058209 | Lucknow     |
                |      2 | vidhir        | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                |      3 | vipin         | python-srapping | 2020-07-22  | 7838507122 | Delhi       |
                |      5 | mahima        | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                |      7 | himanshu      | HR-IT           | 2017-05-13  | 9050508960 | Jaipur      |
                |      8 | shweta ghosh  | HR-IT           | 2018-02-13  | 7838000390 | Kolkata     |
                +--------+---------------+-----------------+-------------+------------+-------------+


                Ex :- insert into artifiq_emp
                      values (04,'srishti','HR-IT',DATE('2018-11-13'),'9069001580','Gurugram'); yaha par hamne khud jab 04 diya tab new record insert hua 04 position par

                 select * from artifiq_emp;
                +--------+---------------+-----------------+-------------+------------+-------------+
                | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
                +--------+---------------+-----------------+-------------+------------+-------------+
                |      1 | abhshek kumar | python-django   | 2020-07-22  | 9415058209 | Lucknow     |
                |      2 | vidhi         | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                |      3 | vipin         | python-srapping | 2020-07-22  | 7838507122 | Delhi       |
                |      4 | srishti       | HR-IT           | 2018-11-13  | 9069001580 | Gurugram    |
                |      5 | mahima        | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                |      6 | manish        | python-srapping | 2019-09-13  | 7054537423 | Agar        |
                |      7 | himanshu      | HR-IT           | 2017-05-13  | 9050508960 | Jaipur      |
                |      8 | shweta ghosh  | HR-IT           | 2018-02-13  | 7838000390 | Kolkata     |
                +--------+---------------+-----------------+-------------+------------+-------------+









6) What is Datatype and type of this?
Ans)


    a) Char or Character :-  It is hold Fixed lg of Str (acn contain letter, no, and special chaacter). it can stop 255 character
                            Syntax :- col_name char (20);

    b) Varchar or Variable Character :- It is hold Variable lg of str (acn contain letter, no, and special chaacter) .
                                         it can stop 255 character. agar 255 se jada character ho jata hai tab varchar automatically convert ho jata hai TEXT Datatype me
                            Syntax :- col_name varchar (20);











7) How to see details of SQL server or Mysql Server ?
Ans) Open Mysql server and run HELP CONTENTS and enter

You asked for help about help category: "Contents"
For more information, type 'help <item>', where <item> is one of the following
categories:
   Account Management
   Administration
   Components
   Compound Statements
   Contents
   Data Definition
   Data Manipulation
   Data Types
   Functions
   Geographic Features
   Help Metadata
   Language Structure
   Plugins
   Storage Engines
   Table Maintenance
   Transactions
   User-Defined Functions
   Utility




        Now i want to see details of Data Manipulation Langauge than write  HELP DATA MANIPULATION and enter

            topics:
               CALL
               DELETE
               DO
               DUAL
               HANDLER
               IMPORT TABLE
               INSERT
               INSERT DELAYED
               INSERT SELECT
               JOIN
               LOAD DATA
               LOAD XML
               PARENTHESIZED QUERY EXPRESSIONS
               REPLACE
               SELECT
               TABLE
               UNION
               UPDATE
               VALUES STATEMENT











8) How to Data Insert in table in db?
Ans) By Using Insert keyword :-
        insert into python_employee_details(Emp_ID,Emp_Name,Emp_Salary,Emp_Address)
        values(01,'Abhishek Kumar',200000,'New Hanuman kapoorthala Mahanagar lucknow');

        Now can i see data insert inside table or not :- than we used SELECT * from table_name;

        select * from python_employee_details;
                +--------+----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
                +--------+----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                +--------+----------------+------------+-------------------------------------------+



                Multiple Values Insert at a Time :-

                CREATE TABLE table_name;

                create table pratikshat
                (
                emp_id int (20) Not Null auto_increment Primary Key ,
                emp_name varchar (50) Not Null,
                emp_dept varchar (50),
                emp_sal int (20),
                emp_joining Date,
                emp_cell varchar (50) Not Null Unique key,
                emp_address text Not Null
                );



                insert into pratikshat
                values (101,'Harish','Owner & CEO',3500000,DATE('2012-07-22'),'9891901121','Himachal'),
                (102,'Ankit','General Mn.',1000000,DATE('2012-10-05'),'94774544','Delhi'),
                (103,'Roshan','Project Mn.',100000,DATE('2013-07-05'),'94544','Bihar'),
                (104,'Abhshek','Python-Django',35000,DATE('2020-07-22'),'9415058209','Lucknow'),
                (105,'Kalindi','Java',10000,DATE('2019-07-05'),'945774','Delhi'),
                (106,'Sagufta','java',35000,DATE('2018-03-22'),'7545','Kanpur'),
                (107,'Pawan','HTML Frantend',20000,DATE('2019-02-14'),'755788555','Gaziabad'),
                (108,'Samir','Java',15000,DATE('2018-04-22'),'22878686','Bihar'),
                (109,'Adib','Java',35000,DATE('2016-04-22'),'7474586','Jaipur'),
                (110,'Harish','Java',8000,DATE('2020-01-22'),'5578686','Ahmedabad'),
                (111,'Avinash','IOT',8000,DATE('2020-10-22'),'557864556','Mumbai'),
                (112,'Abhshek','Python-Machine',25000,DATE('2017-03-22'),'6665478','Agar'),
                (113,'Naveen','Andriod',25000,DATE('2017-05-04'),'33554864','Bhopal');

                select * from pratikshat;
                +--------+---------------+---------------+---------+-------------+------------+-------------+
                | emp_id | emp_name      | emp_dept      | emp_sal | emp_joining | emp_cell   | emp_address |
                +--------+---------------+---------------+---------+-------------+------------+-------------+
                |    101 | Abhshek Kumar | Python-Django |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
                |    102 | Kalindi       | Java          |   10000 | 2019-07-05  | 94544      | Delhi       |
                |    103 | Sagufta Naaz  | java          |   35000 | 2018-03-22  | 7545       | Kanpur      |
                |    104 | Pawan Upreti  | HTML Frantend |   20000 | 2019-02-14  | 57788555   | Gaziabad    |
                |    105 | Samir         | Java          |   15000 | 2018-04-22  | 5578686    | Bihar       |
                +--------+---------------+---------------+---------+-------------+------------+-------------+











9) When i change order of col_name than what happened?
Ans) No Effect on that time but if we write first Emp_Name than Value also defined 1st Emp_Name this like

        insert into python_employee_details(Emp_Name,Emp_ID,Emp_Salary,Emp_Address)
        values('Priya Kumar',02,200000,'New Hanuman kapoorthala Mahanagar lucknow');
        select * from python_employee_details;

                Output are Same
            +--------+----------------+------------+-------------------------------------------+
            | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
            +--------+----------------+------------+-------------------------------------------+
            |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
            +--------+----------------+------------+-------------------------------------------+








10) How to insert data in Specified column?
Ans)
            insert into python_employee_details(Emp_ID,Emp_Name,Emp_Salary)
            values(04,'Sagun Kumari',100000);

            select * from python_employee_details;
            +--------+----------------+------------+-------------------------------------------+
            | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
            +--------+----------------+------------+-------------------------------------------+
            |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
            |      3 | Aryan Kumar    |     300000 | Lucknow                                   |
            |      4 | Sagun Kumari   |     100000 | NULL                                      |
            +--------+----------------+------------+-------------------------------------------+



            Date Insert :- insert into pratikshat
            values(01,'abhishek kumar','python-django',200000.00,DATE('2020-10-18'),'Lucknow','annaaryan95@gmail.com');

            select * from pratikshat;
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+
            | emp_id | emp_name       | emp_dept      | emp_sal   | emp_joining | emp_address | emp_email             |
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+
            |      1 | abhishek kumar | python-django | 200000.00 | 2020-10-18  | Lucknow     | annaaryan95@gmail.com |
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+










11) How to Insert multiple data in table in db?
Ans) By using values at a time:-











12) How to select All column from table & how to select particular column from table ?
Ans)
            1st Step :-
                  show databases;

            2nd Step :-
                  use python_details;

            3rd Step :-
                  show tables;
            +--------------------------+
            | Tables_in_python_details |
            +--------------------------+
            | emp_data                 |
            | python_employee_details  |
            +--------------------------+


            4th Step :- If i want to see type details than we used this function
                desc python_employee_details;
            +-------------+--------------+------+-----+---------+-------+
            | Field       | Type         | Null | Key | Default | Extra |
            +-------------+--------------+------+-----+---------+-------+
            | Emp_ID      | int          | YES  |     | NULL    |       |
            | Emp_Name    | varchar(30)  | YES  |     | NULL    |       |
            | Emp_Salary  | int          | YES  |     | NULL    |       |
            | Emp_Address | varchar(100) | YES  |     | NULL    |       |
            +-------------+--------------+------+-----+---------+-------+


            5th Step :- If i want to see data inside table then weused this Function
                Select All column from table than we use this methods:-
            select * from python_employee_details;
            +--------+-----------------+------------+-------------------------------------------+
            | Emp_ID | Emp_Name        | Emp_Salary | Emp_Address                               |
            +--------+-----------------+------------+-------------------------------------------+
            |      1 | Abhishek Kumar  |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
            |      2 | Priya Kumar     |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
            |      3 | Aryan Kumar     |     300000 | Lucknow                                   |
            |      4 | Sagun Kumari    |     100000 | NULL                                      |
            |      5 | Tashlima Rehman |      50000 | Delhi                                     |
            |      6 | Tanzila Ahmed   |      30000 | Kolkata                                   |
            +--------+-----------------+------------+-------------------------------------------+



            Select Particular column from table than we use this methods ;-

            select Emp_Name,Emp_Salary from python_employee_details;
            +-----------------+------------+
            | Emp_Name        | Emp_Salary |
            +-----------------+------------+
            | Abhishek Kumar  |     200000 |
            | Priya Kumar     |     100000 |
            | Aryan Kumar     |     300000 |
            | Sagun Kumari    |     100000 |
            | Tashlima Rehman |      50000 |
            | Tanzila Ahmed   |      30000 |
            +-----------------+------------+












13) How to write Abhishek's type name in database?
Ans)
        insert into emp_data
        values(5,'sagufta\'s khan',10000.00,Date('2018-04-25'),'Mumbai','Java Script');

        select * from emp_data;
            +--------+----------------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name       | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------------+------------+------------------+-------------+----------------+
            |      1 | abhishek       |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      2 | aryan          |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      3 | vivek          |  800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
            |      4 | abhishek       | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            |      5 | sagufta's khan |   10000.00 | 2018-04-25       | Mumbai      | Java Script    |
            +--------+----------------+------------+------------------+-------------+----------------+












14) How to use limit statement or how to see specifies data from table?
Ans) By using limit statements
        select * from emp_data limit 4;
            +--------+----------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------+------------+------------------+-------------+----------------+
            |      1 | abhishek |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      2 | aryan    |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      3 | vivek    |  800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
            |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            +--------+----------+------------+------------------+-------------+----------------+












15) How to defined starting position and ending position in limit statement?
Ans)
        select * from emp_data
        limit 2,5;
            +--------+----------------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name       | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------------+------------+------------------+-------------+----------------+
            |      3 | vivek          |  800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
            |      4 | abhishek       | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            |      5 | sagufta's khan |   10000.00 | 2018-04-25       | Mumbai      | Java Script    |
            +--------+----------------+------------+------------------+-------------+----------------+











16) Jab specific column ko select karna ho tab?
Ans)
        select Emp_ID,Emp_Name,Emp_Sal from emp_data
        limit 4;
            +--------+----------+------------+
            | Emp_ID | Emp_Name | Emp_Sal    |
            +--------+----------+------------+
            |      1 | abhishek |   10000.00 |
            |      2 | aryan    |  500000.00 |
            |      3 | vivek    |  800000.00 |
            |      4 | abhishek | 1000000.00 |
            +--------+----------+------------+











17) What is Where ?
Ans) Where is used to search for specific data

       Syntax:- Select * from table_name where col_name operator 'value'; value can be numeric or text if value are text than we have toput single qoutes

          Here Operator is so many type like (=, <>or! not equal, > Greater, < Less, >=, <=, between(between in inclusive range),
                                 in(To specify multiple posible values for a column), Like(Search for a pattern))

          Where statement me hota ye hai ki table ke col se bola jata hai ki mujhe kuch special data ko dikhao like

     A)
         Ex:-
            Select * from table_name where Emp_name='abhishek'; yaha par select kar raha hai full table ko phir uss table me se select kar
                                                                          raha hai abhishek naam ke full data ko abhishek naam ke data ko separate
                                                                          display karega..

                Select * from emp_data where Emp_name='abhishek';
                +--------+----------+------------+------------------+-------------+----------------+
                | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
                +--------+----------+------------+------------------+-------------+----------------+
                |      1 | abhishek |   10000.00 | 2020-06-23       | xyz         | abc            |
                |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
                +--------+----------+------------+------------------+-------------+----------------+



     B)
         Ex:-
            Select * from table_name where Emp_name=4;    yaha par Intiger ke sath bhi search kar skte hai like

                 Select * from emp_data where Emp_ID=4;
                +--------+----------+------------+------------------+-------------+----------------+
                | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
                +--------+----------+------------+------------------+-------------+----------------+
                |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
                +--------+----------+------------+------------------+-------------+----------------+



     C)
         Ex:-
             select col_name from table_name where Emp_name='abhishek'   jab keval name column ko display karna ho tab ye method use karte hai

                select Emp_Name from emp_data where Emp_Name='abhishek';
                +----------+
                | Emp_Name |
                +----------+
                | abhishek |
                | abhishek |
                +----------+



    D) Where cluase me value ka used kare but usko display nhi kare to kaise hoga?
          Ex:-
             select col_name from table_name where Emp_name='abhishek'   ye tab kaam karega jab kissi ek column ki value same ho
                like select * from emp_data; issme kisi ek bhi column ki value same hone chahiye tab ye work karega

                +--------+----------------+------------+------------------+-------------+----------------+
                | Emp_ID | Emp_Name       | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
                +--------+----------------+------------+------------------+-------------+----------------+
                |      1 | abhishek       |   10000.00 | 2020-06-23       | xyz         | abc            |
                |      2 | aryan          |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
                |      3 | vivek          |  800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
                |      4 | abhishek       | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
                |      5 | sagufta's khan |   10000.00 | 2018-04-25       | Mumbai      | Java Script    |
                +--------+----------------+------------+------------------+-------------+----------------+










18) How Operator are work ?
Ans) There are so many type of operator are present
(=, <>or! not equal, > Greater, < Less, >=, <=, between(between in inclusive range),in(To specify multiple posible values for a column)

    A) Equal :-

           Ex:-
             select col_name from table_name where Emp_name='abhishek'
             select Emp_Name from emp_data where Emp_Name='abhishek';  iska use tab hota hai jab customer bolta hai ki abhishek ka data dikhao,ya city me  kon kon rehte hai so on
                +----------+
                | Emp_Name |
                +----------+
                | abhishek |
                | abhishek |
                +----------+


    B) Not Equal:-

           Ex:-
             select * from python_employee_details where Emp_Address != 'Delhi';   iska use tab karte hai jab customer bolta hai ki unn logo ka naam batao jo delhi me nhi rehte hai
                +--------+----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
                +--------+----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      2 | Priya Kumar    |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar    |     300000 | Lucknow                                   |
                |      6 | Tanzila Ahmed  |      30000 | Kolkata                                   |
                +--------+----------------+------------+-------------------------------------------+


    C) Greater than Equal & Only Greater than

           Ex:-
             select * from python_employee_details where Emp_ID >= 1; yaha par agar 1 dete hai to 1st record se hi display karna start kar dega kyoki Greater than equal hai
                +--------+-----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name        | Emp_Salary | Emp_Address                               |
                +--------+-----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar  |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      2 | Priya Kumar     |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar     |     300000 | Lucknow                                   |
                |      4 | Sagun Kumari    |     100000 | NULL                                      |
                |      5 | Tashlima Rehman |      50000 | Delhi                                     |
                |      6 | Tanzila Ahmed   |      30000 | Kolkata                                   |
                +--------+-----------------+------------+-------------------------------------------+


           Ex :-
             select * from python_employee_details where Emp_ID >= 2; yaha par 2 dene se counting start hogi 2 se
                +--------+-----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name        | Emp_Salary | Emp_Address                               |
                +--------+-----------------+------------+-------------------------------------------+
                |      2 | Priya Kumar     |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar     |     300000 | Lucknow                                   |
                |      4 | Sagun Kumari    |     100000 | NULL                                      |
                |      5 | Tashlima Rehman |      50000 | Delhi                                     |
                |      6 | Tanzila Ahmed   |      30000 | Kolkata                                   |
                +--------+-----------------+------------+-------------------------------------------+


           Ex :-
             select * from python_employee_details where Emp_ID >1;  When Only Greater Than
                +--------+-----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name        | Emp_Salary | Emp_Address                               |
                +--------+-----------------+------------+-------------------------------------------+
                |      2 | Priya Kumar     |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar     |     300000 | Lucknow                                   |
                |      4 | Sagun Kumari    |     100000 | NULL                                      |
                |      5 | Tashlima Rehman |      50000 | Delhi                                     |
                |      6 | Tanzila Ahmed   |      30000 | Kolkata                                   |
                +--------+-----------------+------------+-------------------------------------------+


           Ex:-
             select * from python_employee_details where Emp_Name >'P';   When we used Text
                +--------+-----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name        | Emp_Salary | Emp_Address                               |
                +--------+-----------------+------------+-------------------------------------------+
                |      2 | Priya Kumar     |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      4 | Sagun Kumari    |     100000 | NULL                                      |
                |      5 | Tashlima Rehman |      50000 | Delhi                                     |
                |      6 | Tanzila Ahmed   |      30000 | Kolkata                                   |
                +--------+-----------------+------------+-------------------------------------------+


    D) Less than Equal & Only Less than

           Ex:-
             select * from python_employee_details where Emp_ID <=4;
                +--------+----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
                +--------+----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      2 | Priya Kumar    |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar    |     300000 | Lucknow                                   |
                |      4 | Sagun Kumari   |     100000 | NULL                                      |
                +--------+----------------+------------+-------------------------------------------+


           Ex:-
             select * from python_employee_details where Emp_ID <4;
                +--------+----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
                +--------+----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      2 | Priya Kumar    |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar    |     300000 | Lucknow                                   |
                +--------+----------------+------------+-------------------------------------------+


           Ex:-
             select * from python_employee_details where Emp_Name <'P'; When we used Text format
                +--------+----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
                +--------+----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar    |     300000 | Lucknow                                   |
                +--------+----------------+------------+-------------------------------------------+










19) What is Null & type of this?
Ans) 1) IS NULL :- This is used to select only record with NULL value in the Column..
        Jab kissi column ki value Null hoti hai tab hamko isska used kkarna hota hai kyoki Where Clause me =,<=,>= se NULL value find nhi kiya ja skta hai

           Ex :-
             select * from python_employee_details where Emp_Address is null;
                +--------+--------------+------------+-------------+
                | Emp_ID | Emp_Name     | Emp_Salary | Emp_Address |
                +--------+--------------+------------+-------------+
                |      4 | Sagun Kumari |     100000 | NULL        |
                +--------+--------------+------------+-------------+



      2) IS NOT NULL :- This is used to select only record with no NULL value in the Column..

           Ex:-
             select * from python_employee_details where Emp_Address is not null;
                +--------+-----------------+------------+-------------------------------------------+
                | Emp_ID | Emp_Name        | Emp_Salary | Emp_Address                               |
                +--------+-----------------+------------+-------------------------------------------+
                |      1 | Abhishek Kumar  |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      2 | Priya Kumar     |     100000 | New Hanuman kapoorthala Mahanagar lucknow |
                |      3 | Aryan Kumar     |     300000 | Lucknow                                   |
                |      5 | Tashlima Rehman |      50000 | Delhi                                     |
                |      6 | Tanzila Ahmed   |      30000 | Kolkata                                   |
                +--------+-----------------+------------+-------------------------------------------+










20) What AND , OR & NOT Operator?
Ans)
    a) AND :- This is display record when both/All conditions are true

       Syntax:-
           select * from table_name where column_name = 'value' AND column_name = 'value';

          Ex :-
           select * from python_employee_details where Emp_Address = 'Lucknow' AND Emp_Name = 'Aryan Kumar';
            +--------+-------------+------------+-------------+
            | Emp_ID | Emp_Name    | Emp_Salary | Emp_Address |
            +--------+-------------+------------+-------------+
            |      3 | Aryan Kumar |     300000 | Lucknow     |
            +--------+-------------+------------+-------------+


            Ex:- Emp_Name jab value unmatch diya tab ek Empty Msg generate hua that means agar kuch galat value provide karte jo record or rows me nhi hota hai tab ye msg aata hai
             select * from python_employee_details where Emp_Address = 'Lucknow' AND Emp_Name = 'Abhishek Kumar';
              Empty set (0.00 sec)




    b) OR :-  This is display record if any one condition are True

       Syntax:-
            select * from table_name where column_name = 'value' OR column_name = 'value';

          Ex:-
           select * from python_employee_details where Emp_Address = 'Lucknow' OR Emp_Name = 'Abhishek Kumar';  YAHA PAR KOI EK VALUE True honi chahiye tab dono ko display kar dega
            +--------+----------------+------------+-------------------------------------------+
            | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
            +--------+----------------+------------+-------------------------------------------+
            |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
            |      3 | Aryan Kumar    |     300000 | Lucknow                                   |
            +--------+----------------+------------+-------------------------------------------+



    c) Combined AND & OR Operator :-

        Syntax:-
             select * from table_name where Emp_Name = 'value' AND (Emp_ID = 'value' OR Emp_Address='value');

          Ex:-
            select * from python_employee_details where Emp_Name='Abhishek Kumar' AND (Emp_ID=01 OR Emp_Address='Lucknow');
              +--------+----------------+------------+-------------------------------------------+
              | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
              +--------+----------------+------------+-------------------------------------------+
              |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
              +--------+----------------+------------+-------------------------------------------+


          Ex:-
            select * from python_employee_details where Emp_Name='Abhishek Kumar' OR (Emp_ID=01 AND Emp_Address='Lucknow'); yaha par () wala data false hai but OR Operator ke karn display ho rha hai data
              +--------+----------------+------------+-------------------------------------------+
              | Emp_ID | Emp_Name       | Emp_Salary | Emp_Address                               |
              +--------+----------------+------------+-------------------------------------------+
              |      1 | Abhishek Kumar |     200000 | New Hanuman kapoorthala Mahanagar lucknow |
              +--------+----------------+------------+-------------------------------------------+



    d) IN Operator :- This operator are used to allow you to specify multiple value IN where clause, iss ka use tab hota hai jab kisi col like name col me koi name ko find karna ho tab use hota hai
            Ex:-
             select * from emp_data where Emp_Address IN ('Frankfurt');
              +--------+----------+------------+------------------+-------------+----------------+
              | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
              +--------+----------+------------+------------------+-------------+----------------+
              |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
              +--------+----------+------------+------------------+-------------+----------------+

            Ex 2:-
             select * from emp_data where Emp_Address IN ('Frankfurt','Delhi');
              +--------+----------+------------+------------------+-------------+----------------+
              | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
              +--------+----------+------------+------------------+-------------+----------------+
              |      2 | aryan    |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
              |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
              +--------+----------+------------+------------------+-------------+----------------+


    e) NOT IN :-
            Ex:-
              select * from pratikshat where emp_address not in ('Delhi','Agar');
               +--------+----------------+---------------+-----------+-------------+-------------+------------------------+
               | emp_id | emp_name       | emp_dept      | emp_sal   | emp_joining | emp_address | emp_email              |
               +--------+----------------+---------------+-----------+-------------+-------------+------------------------+
               |      1 | abhishek kumar | python-django | 200000.00 | 2020-10-18  | Lucknow     | annaaryan95@gmail.com  |
               |      2 | shagufta naaz  | Java Script   |  30000.00 | 2018-06-05  | kanpur      | shaguftanaaz@gmail.com |
               +--------+----------------+---------------+-----------+-------------+-------------+------------------------+










21) What is Between Statement and their type ?
Ans) :-
    BETWEEN :- The BETWEEN Operator select a values within a range..The values can be numbers,text or date.. In Between Statement here necessary to used AND statement

      Syntax:-
         select * from table_name where col_name BETWEEN values1 AND values2

        Ex:-
         select * from pratikshat where emp_id BETWEEN 1 AND 4;
            +--------+----------------+---------------+-----------+-------------+-------------+------------------------+
            | emp_id | emp_name       | emp_dept      | emp_sal   | emp_joining | emp_address | emp_email              |
            +--------+----------------+---------------+-----------+-------------+-------------+------------------------+
            |      1 | abhishek kumar | python-django | 200000.00 | 2020-10-18  | Lucknow     | annaaryan95@gmail.com  |
            |      2 | shagufta naaz  | Java Script   |  30000.00 | 2018-06-05  | kanpur      | shaguftanaaz@gmail.com |
            |      3 | kalindi kumari | Java Script   |  30000.00 | 2019-04-13  | Delhi       | kalindi@gmail.com      |
            |      4 | pawan upreti   | Angular JS    |  40000.00 | 2018-09-22  | Agar        | pawan@gmail.com        |
            +--------+----------------+---------------+-----------+-------------+-------------+------------------------+


         select emp_id,emp_name from pratikshat where emp_id BETWEEN 1 AND 3;
            +--------+----------------+
            | emp_id | emp_name       |
            +--------+----------------+
            |      1 | abhishek kumar |
            |      2 | shagufta naaz  |
            |      3 | kalindi kumari |
            +--------+----------------+


     a) BETWEEN 'TEXT' :- Issme alphabet ka use hota hai like select * from pratikshat where emp_name BETWEEN 'A' AND 'F'
                                'A' se counting karega but 'F' f aur uske baad wale letters ko count nhi karega
         Syntax:-
               select * from table_name where col_name BETWEEN values1 AND values2

          Ex:-
           select * from pratikshat where emp_name BETWEEN 'A' AND 'F';
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+
            | emp_id | emp_name       | emp_dept      | emp_sal   | emp_joining | emp_address | emp_email             |
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+
            |      1 | abhishek kumar | python-django | 200000.00 | 2020-10-18  | Lucknow     | annaaryan95@gmail.com |
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+


            b) BETWEEN 'DATE' :- Yaha par date ke col ko hi use karte hai generally,
            Syntax:-
                select * from pratikshat where emp_joining BETWEEN 'yyyy-mm-dd' AND 'yyyy-mm-dd';

           Ex:-
              select * from pratikshat where emp_joining BETWEEN '2019-03-22' AND '2020-10-20';
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+
            | emp_id | emp_name       | emp_dept      | emp_sal   | emp_joining | emp_address | emp_email             |
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+
            |      1 | abhishek kumar | python-django | 200000.00 | 2020-10-18  | Lucknow     | annaaryan95@gmail.com |
            |      3 | kalindi kumari | Java Script   |  30000.00 | 2019-04-13  | Delhi       | kalindi@gmail.com     |
            +--------+----------------+---------------+-----------+-------------+-------------+-----------------------+




     c) NOT BETWEEN :- Yaha par kissi kissi RDBMS value1 ko use karte hai value2 ko nhi, aur kisi me value2 ko include karte hai value1 ko nhi
                               Kuch RDBMS dono val1,val2 ko inlcude nhi karta hai
        Syntax:- select * from pratikshat where col_name NOT BETWEEN val1 AND val2;


     d) NOT BETWEEN 'TEXT' :-
        Syntax:- select * from pratikshat where col_name NOT BETWEEN val1 AND val2;

          Ex:-
           select * from pratikshat where emp_name NOT BETWEEN 'A' AND 'S';   Yaha par A se R tab ke letters ko display nhi karega, but S aur usse aage wale letter ko display karega
            +--------+---------------+-------------+----------+-------------+-------------+------------------------+
            | emp_id | emp_name      | emp_dept    | emp_sal  | emp_joining | emp_address | emp_email              |
            +--------+---------------+-------------+----------+-------------+-------------+------------------------+
            |      2 | shagufta naaz | Java Script | 30000.00 | 2018-06-05  | kanpur      | shaguftanaaz@gmail.com |
            |      5 | samir         | IOT HTML    | 40000.00 | 2018-06-22  | Delhi       | samir@gmail.com        |
            +--------+---------------+-------------+----------+-------------+-------------+------------------------+



     e) Not BETWEEN 'DATE' :- Yaha par date ke col ko hi use karte hai generally, yaha par val1 and val2 ko display nhi karega iss RDBMS ke software me
        Syntax:-
                select * from pratikshat where col_name NOT BETWEEN 'yyyy-mm-dd' AND 'yyyy-mm-dd';

          Ex:-
           select * from pratikshat where emp_joining NOT BETWEEN '2019-03-22' AND '2020-10-20';
            +--------+---------------+-------------+----------+-------------+-------------+------------------------+
            | emp_id | emp_name      | emp_dept    | emp_sal  | emp_joining | emp_address | emp_email              |
            +--------+---------------+-------------+----------+-------------+-------------+------------------------+
            |      2 | shagufta naaz | Java Script | 30000.00 | 2018-06-05  | kanpur      | shaguftanaaz@gmail.com |
            |      4 | pawan upreti  | Angular JS  | 40000.00 | 2018-09-22  | Agar        | pawan@gmail.com        |
            |      5 | samir         | IOT HTML    | 40000.00 | 2018-06-22  | Delhi       | samir@gmail.com        |
            +--------+---------------+-------------+----------+-------------+-------------+------------------------+



     f) BETWEEN with 'IN' :-
        Syntax :-
                select * from table_name where (col_name Between val1 AND val2) AND col_name IN (val1,val2);

          Ex1 :-
           select * from emp_data where (Emp_Address Between 'D' AND 'F') AND Emp_Technology IN ('Python-Django','Dot Net');  yaha 'F' ko display nhi kar rha hai iss liye 1 hi python-django wale ko display kar rha hai
            +--------+----------+-----------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name | Emp_Sal   | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------+-----------+------------------+-------------+----------------+
            |      2 | aryan    | 500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            +--------+----------+-----------+------------------+-------------+----------------+


          Ex2 :-
           select * from emp_data where (Emp_Address Between 'D' AND 'M') AND Emp_Technology IN ('Python-Django','Java Script');
            +--------+----------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------+------------+------------------+-------------+----------------+
            |      2 | aryan    |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            +--------+----------+------------+------------------+-------------+----------------+
                   yaha par ho ye rha hai ki jiska address D AND M ke bech me aata hai aur sath hi uski technology Python and Java
                   ke beech me aati hai uski ko display karega
                   but yaha par ek baat aur janne wali ye hai ki address 'D' wale ko display karega but 'M' wale address ko display
                   nhi karega
                   aur technology me bhi python wale ko display karega but Java wale ko nhi karega means val1 ko display karega but val2
                   ko display nhi karega MySQL RDBMS wale software me




     g) BETWEEN with 'IN' :-
        Syntax :-
                select * from table_name where (col_name Between val1 AND val2) AND NOT col_name IN (val1,val2);

          Ex :-
           select * from emp_data where (Emp_Address Between 'D' AND 'M') AND NOT Emp_Technology IN ('Python-Django','Java Script');
            +--------+----------+-----------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name | Emp_Sal   | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------+-----------+------------------+-------------+----------------+
            |      3 | vivek    | 800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
            +--------+----------+-----------+------------------+-------------+----------------+










22) What is Like?
Ans) Like is used to search to specified pattern that is like
     Syntax:- select * from table_name where col_name like '%a'

     Wildcard - is used to search for data within table. These character are used with the LIKE Operator

                 Isska fayeda yehhai ki jab google ya fb ya other par kuch search karna hota hai like Flipkart search karna
                 But mujhe flipkart ka pura name nhi pata ho tab ham sirf Flip kar ke search karte hai, isse hota ye hai kiflip name
                 ki jitni bhi list hogi wo google par display ho jayegi
                 yaha par hmko flip% nhi likhna hota hai kyoki ye kaam background process me auto hota hai

       1) % = Zero or More Than Character
          Ex :- 'abhi%' - All string with abhi (means % ka kaam hota hai ki abhi ke baad ke character ko search karata hai
                                                  lika abhi + shek means search kar ke display karega abhishek ko)

          Ex2 :- '%shek' - All endinf with shek
            Ans = 'abhishek'

          Ex3 :- %bhi% - All Containing with 'bhi'
            Ans = 'abhishek'


          Pratical 1 :-
           select * from emp_data where Emp_Name like 'a%';
            +--------+----------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------+------------+------------------+-------------+----------------+
            |      1 | abhishek |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      2 | aryan    |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            +--------+----------+------------+------------------+-------------+----------------+





       2) _ = One Single Character

          Ex1 :- 'abhishe_' Statring with abhishe than any character
            Ans :- 'abhishe_'  = 'abhishek'

          Ex2 :- 'ab_is_e_' = 'abhishek'
          Ex3 :- '_bhishek' = 'abhishek'

          Pratical 1 :-
           select * from emp_data where Emp_Name like 'ab_is_e_';
            +--------+----------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------+------------+------------------+-------------+----------------+
            |      1 | abhishek |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      4 | abhishek | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            +--------+----------+------------+------------------+-------------+----------------+



       3) NOT LIKE :-
           Syntax select * from table_name where col_name NOT LIKE '%a';

           Ex1:-
            select * from emp_data where emp_name NOT LIKE '%vive_';
            +--------+----------------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name       | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------------+------------+------------------+-------------+----------------+
            |      1 | abhishek       |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      2 | aryan          |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      4 | abhishek       | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            |      5 | sagufta's khan |   10000.00 | 2018-04-25       | Mumbai      | Java Script    |
            +--------+----------------+------------+------------------+-------------+----------------+



       Ex 4
            select * from pratikshat where emp_name like '%Ab%'; Ye tab use hoga jab hmko starting ke 2 words find karne ho
            +--------+----------+----------------+---------+-------------+------------+-------------+
            | emp_id | emp_name | emp_dept       | emp_sal | emp_joining | emp_cell   | emp_address |
            +--------+----------+----------------+---------+-------------+------------+-------------+
            |    104 | Abhshek  | Python-Django  |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
            |    112 | Abhshek  | Python-Machine |   25000 | 2017-03-22  | 6665478    | Agar        |
            +--------+----------+----------------+---------+-------------+------------+-------------+



       Ex 5
            select * from pratikshat where emp_name like '%k';   Last ka word find karna ho tab ye use karenge
            +--------+----------+----------------+---------+-------------+------------+-------------+
            | emp_id | emp_name | emp_dept       | emp_sal | emp_joining | emp_cell   | emp_address |
            +--------+----------+----------------+---------+-------------+------------+-------------+
            |    104 | Abhshek  | Python-Django  |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
            |    112 | Abhshek  | Python-Machine |   25000 | 2017-03-22  | 6665478    | Agar        |
            +--------+----------+----------------+---------+-------------+------------+-------------+



       Ex 6
            select * from pratikshat where emp_name like '____';  # ye tab use hoga jab hmko 4 letter wale name find karne ho ya usse jada lenght we find karne ho but ye pata hona chahiye ki kitne word ke name ko find karna hai jitne letter ka name hoga utna hi underscore use karna hoga ye maindatory hai
            +--------+----------+----------+---------+-------------+----------+-------------+
            | emp_id | emp_name | emp_dept | emp_sal | emp_joining | emp_cell | emp_address |
            +--------+----------+----------+---------+-------------+----------+-------------+
            |    109 | Adib     | Java     |   35000 | 2016-04-22  | 7474586  | Jaipur      |
            +--------+----------+----------+---------+-------------+----------+-------------+








22) What is Order By and how to short Records in Desending and Acending Order?
Ans) By Using Order we can short our Records

      1) Descending Order :-

          Ex:-
           select * from emp_data order by Emp_Name desc;
            +--------+----------------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name       | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------------+------------+------------------+-------------+----------------+
            |      3 | vivek          |  800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
            |      5 | sagufta's khan |   10000.00 | 2018-04-25       | Mumbai      | Java Script    |
            |      2 | aryan          |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      1 | abhishek       |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      4 | abhishek       | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            +--------+----------------+------------+------------------+-------------+----------------+


      2) Acending Order :-

         Ex:-
          select * from emp_data order by Emp_Name asc;
            +--------+----------------+------------+------------------+-------------+----------------+
            | Emp_ID | Emp_Name       | Emp_Sal    | Emp_Joining_Date | Emp_Address | Emp_Technology |
            +--------+----------------+------------+------------------+-------------+----------------+
            |      1 | abhishek       |   10000.00 | 2020-06-23       | xyz         | abc            |
            |      4 | abhishek       | 1000000.00 | 2019-10-19       | Frankfurt   | Python-Django  |
            |      2 | aryan          |  500000.00 | 2020-10-19       | Delhi       | Python-Django  |
            |      5 | sagufta's khan |   10000.00 | 2018-04-25       | Mumbai      | Java Script    |
            |      3 | vivek          |  800000.00 | 2015-10-19       | Lucknow     | Dot Net        |
            +--------+----------------+------------+------------------+-------------+----------------+





23) What is Auto Increment?
Ans)

    1)st Step:-
       create table artifiq_emp
        (
        emp_id int NOT NULL AUTO_INCREMENT Primary Key,
        emp_name varchar (50) not null,
        emp_dept varchar (50) not null,
        emp_joining Date,
        emp_cell varchar (50),
        emp_address text
        );

    2)nd Step :-

         Condition 1) :-

            Ex 1:-
              insert into demo_cls(emp_name,emp_city)
              values ('abhishek','lucknow');
              select * from demo_cls;
            +--------+----------+----------+
            | emp_id | emp_name | emp_city |
            +--------+----------+----------+
            |      1 | abhishek | lucknow  |
            +--------+----------+----------+



            insert into artifiq_emp(emp_name,emp_dept,emp_joining,emp_cell,emp_address)     # auto_increment tab kaam karta hai jab insert into me column name bhi dete hai,agr col_name nhi defind kare to auto_increment kaam nhi karega
            values ('abhshek kumar','python-django',DATE('2020-07-22'),'9415058209','Lucknow');    # iss liye jab bhi auto_inc ka use kare tab (col_name) defined karna jaruri hoga but jiss col_name ko P.K & A.I banaya hai table create karte time usko insert ke time me likhne ki jarurat nhi hoti hai
            +--------+---------------+-----------------+-------------+------------+-------------+
            | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
            +--------+---------------+-----------------+-------------+------------+-------------+
            |      1 | abhshek kumar | python-django   | 2020-07-22  | 9415058209 | Lucknow     |
            +--------+---------------+-----------------+-------------+------------+-------------+



         Condition 2) :-
            insert into artifiq_emp
            values (NULL,'vipin','python-srapping',DATE('2020-07-22'),'7838507122','Delhi');  Auto Increment is replace Null Value and call increment number like 1,2,3,4 so on
            select * from artifiq_emp;
            +--------+---------------+-----------------+-------------+------------+-------------+
            | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
            +--------+---------------+-----------------+-------------+------------+-------------+
            |      1 | abhshek kumar | python-django   | 2020-07-22  | 9415058209 | Lucknow     |
            |      3 | vipin         | python-srapping | 2020-07-22  | 7838507122 | Delhi       |
            +--------+---------------+-----------------+-------------+------------+-------------+


         Ex 2 :- ye tab condition use hoga jab hamko defaul 1 number se start nhi karna ho, jab hmko kissi specific no se start karna ho numbering like 101,102 so on tab ham this method use karenge
            create table demo1
            (
            emp_id int (20) not null auto_increment primary key,

                        emp_name varchar (50),
            emp_dept varchar (50)
            );

            2nd) Step :- Alter table demo1 auto_increment = 101;

            3rd) Step :-desc demo1;
            +----------+-------------+------+-----+---------+----------------+
            | Field    | Type        | Null | Key | Default | Extra          |
            +----------+-------------+------+-----+---------+----------------+
            | emp_id   | int         | NO   | PRI | NULL    | auto_increment |
            | emp_name | varchar(50) | YES  |     | NULL    |                |
            | emp_dept | varchar(50) | YES  |     | NULL    |                |
            +----------+-------------+------+-----+---------+----------------+


            4th) Step :-insert into demo1(emp_name,emp_dept)
            values ('abhishek','lucknow'),
            ('sagun','lucknow'),
            ('sanskriti','lucknow'),
            ('rudransh','lucknow'),
            ('anoop','lucknow'),
            ('vivek','lucknow'),
            ('rukmani devi','lucknow'),
            ('pooja devi','lucknow'),
            ('pawank kumar','lucknow'),
                ('kusheshwar','lucknow');

            5th) Step :- select * from demo1;
            +--------+--------------+----------+
            | emp_id | emp_name     | emp_dept |
            +--------+--------------+----------+
            |    101 | abhishek     | lucknow  |
            |    102 | sagun        | lucknow  |
            |    103 | sanskriti    | lucknow  |
            |    104 | rudransh     | lucknow  |
            |    105 | anoop        | lucknow  |
            |    106 | vivek        | lucknow  |
            |    107 | rukmani devi | lucknow  |
            |    108 | pooja devi   | lucknow  |
            |    109 | pawank kumar | lucknow  |
            |    110 | kusheshwar   | lucknow  |
            +--------+--------------+----------+




         Condition 3) :-With out Specifying Col_Name than what i do it :- iss cond me ID ki value NULL deni hogi
              insert into artifiq_emp
              values (NULL,'himanshu','HR-IT',DATE('2017-05-13'),'9050508960','Jaipur'),
              (NULL,'shweta ghosh','HR-IT',DATE('2018-02-13'),'7838000390','Kolkata');   # yani 2 NULL value ek sath accept kar skta hai

              select * from artifiq_emp;
            +--------+---------------+-----------------+-------------+------------+-------------+
            | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
            +--------+---------------+-----------------+-------------+------------+-------------+
            |      1 | abhshek kumar | python-django   | 2020-07-22  | 9415058209 | Lucknow     |
            |      2 | vidhir        | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
            |      3 | vipin         | python-srapping | 2020-07-22  | 7838507122 | Delhi       |
            |      5 | mahima        | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
            |      7 | himanshu      | HR-IT           | 2017-05-13  | 9050508960 | Jaipur      |
            |      8 | shweta ghosh  | HR-IT           | 2018-02-13  | 7838000390 | Kolkata     |
            +--------+---------------+-----------------+-------------+------------+-------------+





25) What is Aliasing?
Ans) Aliasing ka better use Concatination ke time me

       Aliasing me semi colamn dete hi ham jis table ka Alias kar rehe hote hai wo end ho jata hai
       Aliasing tab tak hi kaam karta hai jab tak ham semi_column(;) ka use nahi karte hai
       For Ex :- select emp_name from artifiq_emp AS artiq    # yaha aliasing kaam karta hai rhega
                 select emp_name from artiq   # ab artifiq_emp table ka ek aur name ho gya hai artiq but ye name tab tak hi rhega jab tak semi_column nhi lagate jaha se aliasing start kiya hai hamne

            Ex 1 :- select emp_name from demo1 AS family
                 select * from family;       # semi_col ke karn EError aa rha hai
                 ERROR 1064 (42000): You have an error in your SQL syntax

            Ex 2 :- yaha par name column ka aliasing ho rha hai
                 select emp_name as name from demo1;
                 +--------------+
                 | name         |
                 +--------------+
                 | abhishek     |
                 | sagun        |
                 | sanskriti    |
                 | rudransh     |
                 | anoop        |
                 | vivek        |
                 | rukmani devi |
                 | pooja devi   |
                 | pawank kumar |
                 | kusheshwar   |
                 +--------------+








26) What is Arithmetic Operator?
Ans)

                insert into pratikshat(emp_name,emp_dept,emp_sal,emp_joining,emp_cell,emp_address)
                values ('Sagufta Naaz','Java',15000,DATE('2018-03-12'),'9508454412','Kanpur'),
                ('Kalindi Kumari','Java',15000,DATE('2019-03-04-02'),'9525146482','Delhi');

                select * from pratikshat;
                +--------+----------------+---------------+---------+-------------+------------+-------------+
                | emp_id | emp_name       | emp_dept      | emp_sal | emp_joining | emp_cell   | emp_address |
                +--------+----------------+---------------+---------+-------------+------------+-------------+
                |      1 | Abhishek Kumar | Python-Django |   15000 | 2020-10-18  | 9415058209 | Lucknow     |
                |      2 | Sagufta Naaz   | Java          |   15000 | 2018-03-12  | 9508454412 | Kanpur      |
                |      3 | Kalindi Kumari | Java          |   15000 | 2019-03-04  | 9525146482 | Delhi       |
                +--------+----------------+---------------+---------+-------------+------------+-------------+



                        Syntax :- select col1,col2,col3,col2+10000 from table_name;

                                Ex 1:- select emp_id,emp_name,emp_sal,emp_cell, emp_sal+10000 from pratikshat;
                +--------+----------------+---------+------------+---------------+
                | emp_id | emp_name       | emp_sal | emp_cell   | emp_sal+10000 |
                +--------+----------------+---------+------------+---------------+
                |      1 | Abhishek Kumar |   15000 | 9415058209 |         25000 |
                |      2 | Sagufta Naaz   |   15000 | 9508454412 |         25000 |
                |      3 | Kalindi Kumari |   15000 | 9525146482 |         25000 |
                +--------+----------------+---------+------------+---------------+


                                Ex 2:- select emp_id,emp_name,emp_sal,emp_cell, emp_name+emp_dept from pratikshat; # iss Ex se find hota hai ki arithmetic ka use keval intiger value ke sath kar skte hai
                +--------+----------------+---------+------------+-------------------+
                | emp_id | emp_name       | emp_sal | emp_cell   | emp_name+emp_dept |
                +--------+----------------+---------+------------+-------------------+
                |      1 | Abhishek Kumar |   15000 | 9415058209 |                 0 |
                |      2 | Sagufta Naaz   |   15000 | 9508454412 |                 0 |
                |      3 | Kalindi Kumari |   15000 | 9525146482 |                 0 |
                +--------+----------------+---------+------------+-------------------+


                                Ex 3:-select emp_id,emp_name,emp_sal,emp_cell,emp_id+emp_sal from pratikshat;  # 2 string ko add karne ka method alag hai
                +--------+----------------+---------+------------+----------------+
                | emp_id | emp_name       | emp_sal | emp_cell   | emp_id+emp_sal |
                +--------+----------------+---------+------------+----------------+
                |      1 | Abhishek Kumar |   15000 | 9415058209 |          15001 |
                |      2 | Sagufta Naaz   |   15000 | 9508454412 |          15002 |
                |      3 | Kalindi Kumari |   15000 | 9525146482 |          15003 |
                +--------+----------------+---------+------------+----------------+









27) What is Distinct Methods?
Ans) It is use to remove dulpicate data from table
                Ex 1:- Distinct
                                    select distinct emp_dept from pratikshat;
                +---------------+
                | emp_dept      |
                +---------------+
                | Python-Django |
                | Java          |
                +---------------+

                Ex 2:- Distinct method tab work karta hai jab single column ka use kar rhe hote hai
                    select distinct emp_id,emp_name,emp_dept,emp_sal,emp_cell,emp_joining,emp_address from pratikshat;
                +--------+----------------+---------------+---------+------------+-------------+-------------+
                | emp_id | emp_name       | emp_dept      | emp_sal | emp_cell   | emp_joining | emp_address |
                +--------+----------------+---------------+---------+------------+-------------+-------------+
                |      1 | Abhishek Kumar | Python-Django |   15000 | 9415058209 | 2020-10-18  | Lucknow     |
                |      2 | Sagufta Naaz   | Java          |   15000 | 9508454412 | 2018-03-12  | Kanpur      |
                |      3 | Kalindi Kumari | Java          |   15000 | 9525146482 | 2019-03-04  | Delhi       |
                +--------+----------------+---------------+---------+------------+-------------+-------------+







28) What is UPDATE ?
Ans) Update statement  is used to update existing record in tables that is Update..
       Syntax :-
             UPDATE table_name
             SET column1='value', column2='value'....
             WHERE some_column='same_value'  # yaha par where clause me always P.K ya U.K wala hi column lena chahiye
                                               isse search karne me easy hota hai sys ko ya uss column ko easly search kar
                                               leta hai jisko hame update karna hai..

       Ex 1:-
           1st Step :- select * from my_family;
                +--------+--------------+----------+----------+---------+
                | emp_id | emp_name     | emp_dept | emp_cell | emp_add |
                +--------+--------------+----------+----------+---------+
                |    101 | abhishek     | lucknow  | NULL     | NULL    |
                |    102 | sagun        | lucknow  | NULL     | NULL    |
                |    103 | sanskriti    | lucknow  | NULL     | NULL    |
                |    104 | rudransh     | lucknow  | NULL     | NULL    |
                |    105 | anoop        | lucknow  | NULL     | NULL    |
                |    106 | vivek        | lucknow  | NULL     | NULL    |
                |    107 | rukmani devi | lucknow  | NULL     | NULL    |
                |    108 | pooja devi   | lucknow  | NULL     | NULL    |
                |    109 | pawank kumar | lucknow  | NULL     | NULL    |
                |    110 | kusheshwar   | lucknow  | NULL     | NULL    |
                +--------+--------------+----------+----------+---------+


           2nd Step :- UPDATE my_family
                SET emp_cell='9415058209',emp_add='Delhi'
                WHERE emp_id = 101;   # Yaha par always wo column lete hai jo P.K ya U.K ho jisse data jab update ho to ussi tuple me update ho jisme ham chahte hai

           3rd Step :- select * from my_family;
                +--------+--------------+----------+------------+---------+
                | emp_id | emp_name     | emp_dept | emp_cell   | emp_add |
                +--------+--------------+----------+------------+---------+
                |    101 | abhishek     | lucknow  | 9415058209 | Delhi   |
                |    102 | sagun        | lucknow  | NULL       | NULL    |
                |    103 | sanskriti    | lucknow  | NULL       | NULL    |
                |    104 | rudransh     | lucknow  | NULL       | NULL    |
                |    105 | anoop        | lucknow  | NULL       | NULL    |
                |    106 | vivek        | lucknow  | NULL       | NULL    |
                |    107 | rukmani devi | lucknow  | NULL       | NULL    |
                |    108 | pooja devi   | lucknow  | NULL       | NULL    |
                |    109 | pawank kumar | lucknow  | NULL       | NULL    |
                |    110 | kusheshwar   | lucknow  | NULL       | NULL    |
                +--------+--------------+----------+------------+---------+




       Ex 2:- Agar WHERE CLAUSE ka use nhi karte hai tab kya hoga hamare table me
                UPDATE my_family
                SET emp_cell='9415058209',emp_add='Delhi'; jab where clause ka use nhi karte hai tab jo data update  karte hai wo value sare Tuple me insert ho jata hai iss liye ham WHERE CLAUSE ka use  kate hai ki hamara value specific tuple me hiinsert ho jisme ham chahte hai

                select * from my_family;
                +--------+--------------+----------+------------+---------+
                | emp_id | emp_name     | emp_dept | emp_cell   | emp_add |
                +--------+--------------+----------+------------+---------+
                |    101 | abhishek     | lucknow  | 9415058209 | Delhi   |
                |    102 | sagun        | lucknow  | 9415058209 | Delhi   |
                |    103 | sanskriti    | lucknow  | 9415058209 | Delhi   |
                |    104 | rudransh     | lucknow  | 9415058209 | Delhi   |
                |    105 | anoop        | lucknow  | 9415058209 | Delhi   |
                |    106 | vivek        | lucknow  | 9415058209 | Delhi   |
                |    107 | rukmani devi | lucknow  | 9415058209 | Delhi   |
                |    108 | pooja devi   | lucknow  | 9415058209 | Delhi   |
                |    109 | pawank kumar | lucknow  | 9415058209 | Delhi   |
                |    110 | kusheshwar   | lucknow  | 9415058209 | Delhi   |
                +--------+--------------+----------+------------+---------+



       Ex 3:- Jab pehle se defined column ko update karna ho tab kese hoga like emp_name column me kusheshwar ki jagah par pari devi dena ho tab kya karenge?

                UPDATE my_family
                SET emp_name = 'pari devi'  # yaha par kusheshwar ki jagah par pari devi update ho gya hai
                where emp_id = 110;

                select * from my_family;
                +--------+--------------+----------+----------+---------+
                | emp_id | emp_name     | emp_dept | emp_cell | emp_add |
                +--------+--------------+----------+----------+---------+
                |    101 | abhishek     | lucknow  | NULL     | NULL    |
                |    102 | sagun        | lucknow  | NULL     | NULL    |
                |    103 | sanskriti    | lucknow  | NULL     | NULL    |
                |    104 | rudransh     | lucknow  | NULL     | NULL    |
                |    105 | anoop        | lucknow  | NULL     | NULL    |
                |    106 | vivek        | lucknow  | NULL     | NULL    |
                |    107 | rukmani devi | lucknow  | NULL     | NULL    |
                |    108 | pooja devi   | lucknow  | NULL     | NULL    |
                |    109 | pawank kumar | lucknow  | NULL     | NULL    |
                |    110 | pari devi    | lucknow  | NULL     | NULL    |
                +--------+--------------+----------+----------+---------+




       Ex 4:- UPDATE with CASE :-

             Syntax :-
                  UPDATE table_name
                  SET new_column/old_column
                  CASE
                      WHEN column1 = some_value1 then new_value1
                      WHEN column2 = some_value2 then new_value2

                      ELSE new_value3;


             Ex :-
                UPDATE pratikshat
                SET performance =
                CASE                           # case ka use kar ke multiple rows ko update kar skte hai
                WHEN mark >= 300 THEN 'FIRST'
                WHEN mark < 300 AND mark >= 250 THEN 'SECOND'
                 WHEN mark < 250 AND mark >= 200 THEN 'THIRD'
                ELSE 'FAIL'
                END;

                select * from pratikshat;
                +--------+----------------+---------------+-------------+------+---------+-------------+------------+-------------+
                | emp_id | emp_name       | emp_dept      | performance | mark | emp_sal | emp_joining | emp_cell   | emp_address |
                +--------+----------------+---------------+-------------+------+---------+-------------+------------+-------------+
                |      1 | Abhishek Kumar | Python-Django | FIRST       |  300 |   15000 | 2020-10-18  | 9415058209 | Lucknow     |
                |      2 | Sagufta Naaz   | Java          | THIRD       |  200 |   15000 | 2018-03-12  | 9508454412 | Kanpur      |
                |      3 | Kalindi Kumari | Java          | SECOND      |  250 |   15000 | 2019-03-04  | 9525146482 | Delhi       |
                +--------+----------------+---------------+-------------+------+---------+-------------+------------+-------------+









30) What is DELETE?
Ans) Delete statement is used to delete specific record/rows/tuple from table
            Ex :-
                delete from my_family
                where emp_id = 110;     # When we used WHERE CLAUSE we can delete specific record/rows/tuple from table
                                          agr where WHERE CLAUSE nhi dete hai tab ALL ROWS/RECORD/TUPLE delete  ho jayega table se
                mysql> select * from my_family;
                +--------+--------------+----------+----------+---------+
                | emp_id | emp_name     | emp_dept | emp_cell | emp_add |
                +--------+--------------+----------+----------+---------+
                |    101 | abhishek     | lucknow  | NULL     | NULL    |
                |    102 | sagun        | lucknow  | NULL     | NULL    |
                |    103 | sanskriti    | lucknow  | NULL     | NULL    |
                |    104 | rudransh     | lucknow  | NULL     | NULL    |
                |    105 | anoop        | lucknow  | NULL     | NULL    |
                |    106 | vivek        | lucknow  | NULL     | NULL    |
                |    107 | rukmani devi | lucknow  | NULL     | NULL    |
                |    108 | pooja devi   | lucknow  | NULL     | NULL    |
                |    109 | pawank kumar | lucknow  | NULL     | NULL    |
                +--------+--------------+----------+----------+---------+










32) What Copy Statement and how to copy new_table to ild_table within same Database ?
Ans)
   1st Method :- copy new_table to ild_table within same Database :- yaha par new_table create kar rehe hai old_table ek hi Database me
                    sath hi constraint bhi copy ho jata hai

      Syntax:- create table new_table_name LIKE old_table_name;
               insert new_table_name SELECT * FROM OLD_TABLE_NAME;


            Ex :- Jab Same Database me ek table ko Copy kar ke dusre table create karna ho tab ye method use karenge..

                1st Step :- CREATE TABLE  artifiq LIKE artifiq_emp;

                INSERT artifiq SELECT * FROM artifiq_emp;

                DESC artifiq;
                +-------------+-------------+------+-----+---------+----------------+
                | Field       | Type        | Null | Key | Default | Extra          |
                +-------------+-------------+------+-----+---------+----------------+
                | emp_id      | int         | NO   | PRI | NULL    | auto_increment |
                | emp_name    | varchar(50) | NO   |     | NULL    |                |
                | emp_dept    | varchar(50) | NO   |     | NULL    |                |
                | emp_joining | date        | YES  |     | NULL    |                |
                | emp_cell    | varchar(50) | YES  |     | NULL    |                |
                | emp_address | text        | YES  |     | NULL    |                |
                +-------------+-------------+------+-----+---------+----------------+


                2nd Step :- SELECT * FROM artifiq;
                +--------+----------------+-----------------+-------------+------------+-------------+
                | emp_id | emp_name       | emp_dept        | emp_joining | emp_cell   | emp_address |
                +--------+----------------+-----------------+-------------+------------+-------------+
                |    101 | Abhishek Kumar | Python-Django   | 2020-06-24  | 9415058209 | Lucknow     |
                |    102 | Vidhi          | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                |    103 | vipin          | python-srapping | 2020-07-22  | 7838507122 | Gaziabad    |
                |    104 | manish         | python-srapping | 2018-03-22  | 7054537423 | Agra        |
                |    105 | Srishti        | HR-IT           | 2018-11-13  | 9069001580 | Gurugram    |
                |    106 | Mahima         | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                |    107 | Himanshu       | HR-IT           | 2017-05-13  | 9050508960 | Agar        |
                |    108 | Shweta Ghosh   | HR-IT           | 2018-02-15  | 7838000390 | Kolkata     |
                |    109 | Abhishek Singh | HR-IT           | 2017-02-05  | 8802029898 | Mumbai      |
                +--------+----------------+-----------------+-------------+------------+-------------+





   2nd METHOD:- Jab Ek DATABASE ke TABLE ko COPY kar ke Disre DATABASE ke TABLE me INSERT karna ho  tab ye method use
                  karenge

      Syntax :-
               create table new_table_name LIKE old_database.old_table_name;
               insert new_table_name SELECT * FROM old_database.old_table_name;


           Ex :-

                1st Step :- Uss Database me pehle jana hoga jaha par hamko table ko Copy karke new_table create karna hai..
                               Jaha par NEW_TABLES CREATE hoga Ussi DATABASE me hamko rehna hoga

                           Syntax :- use Database_name;

                2nd Step :-create table Emp_Details LIKE mysql.artifiq_emp;

                3rd Step :-insert Emp_Details SELECT * FROM mysql.artifiq_emp;

                4th Step :-select * from emp_details;
                +--------+----------------+-----------------+-------------+------------+-------------+
                | emp_id | emp_name       | emp_dept        | emp_joining | emp_cell   | emp_address |
                +--------+----------------+-----------------+-------------+------------+-------------+
                |    101 | Abhishek Kumar | Python-Django   | 2020-06-24  | 9415058209 | Lucknow     |
                |    102 | Vidhi          | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                |    103 | vipin          | python-srapping | 2020-07-22  | 7838507122 | Gaziabad    |
                |    104 | manish         | python-srapping | 2018-03-22  | 7054537423 | Agra        |
                |    105 | Srishti        | HR-IT           | 2018-11-13  | 9069001580 | Gurugram    |
                |    106 | Mahima         | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                |    107 | Himanshu       | HR-IT           | 2017-05-13  | 9050508960 | Agar        |
                |    108 | Shweta Ghosh   | HR-IT           | 2018-02-15  | 7838000390 | Kolkata     |
                |    109 | Abhishek Singh | HR-IT           | 2017-02-05  | 8802029898 | Mumbai      |
                +--------+----------------+-----------------+-------------+------------+-------------+










34) What Is MIN(), MAX(), SUM(), AVG(), ROUND UP (), UPPER(), LOWER(),SQRT(), COUNT(), MID(), LENGHT()
Ans)
    1st :-
        MIN :-
         Syntax :- SELECT MIN(column_name) from table_name;

            Ex 1:-
               select min(emp_name) from emp_details; # yaha par column me min likh kar aa rha hai, min ko kese remove
                                                            karenge uske liye EX2 me dekhte hai
               +----------------+
               | min(emp_name)  |
               +----------------+
               | Abhishek Kumar |
               +----------------+


            Ex 2:-
              select min(emp_name) as emp_name from emp_details;  # yha par column ka name emp_name display ho rha hai
                +----------------+
                | emp_name       |
                +----------------+
                | Abhishek Kumar |
                +----------------+


    2nd :-
        MAX :-
         Syntax :- SELECT MAX(column_name) from table_name;

            Ex 1:-
               select max(emp_name) from emp_details;  # yaha par column me max likh kar aa rha hai, max ko kese remove
                                                            karenge uske liye EX2 me dekhte hai
                +---------------+
                | max(emp_name) |
                +---------------+
                | vipin         |
                +---------------+


            Ex 2:-
               select max(emp_name) as emp_name from emp_details;
                +----------+
                | emp_name |
                +----------+
                | vipin    |
                +----------+




    3rd :-
        SUM():-
         Syntax :-SELECT SUM(COLUMN_NAME) as COLUMN_NAME FROM TABLE_NAME;

            Ex :-
               select sum(emp_sal) as emp_sal from pratikshat;
                +---------+
                | emp_sal |
                +---------+
                |  115000 |
                +---------+


    4th :-
        AVG() :-
         Syntax:- SELECT AVG(COLUMN_NAME) as COLUMN_NAME FROM TABLE_NAME;

            Ex:-
               select avg(emp_sal) as emp_sal from pratikshat;
                +------------+
                | emp_sal    |
                +------------+
                | 23000.0000 |
                +------------+



    5th :-
        SQRT (Square Root) :-
         Syntax :- SELECT COLUMN_NAME1 , SQRT(COLUMN_NAME1) FROM TABLE_NAME;

            Ex 1:- Jab column me sqrt bhi likha hua aayega tab ke case me
               select emp_sal, sqrt(emp_sal) from pratikshat;
                +---------+--------------------+
                | emp_sal | sqrt(emp_sal)      |
                +---------+--------------------+
                |   35000 | 187.08286933869707 |
                |   10000 |                100 |
                |   35000 | 187.08286933869707 |
                |   20000 |  141.4213562373095 |
                |   15000 | 122.47448713915891 |
                +---------+--------------------+

            Ex 2:- Jab column me sqrt nhi likha hua aayega tab ke case me
               select emp_sal, sqrt(emp_sal) as emp_sal from pratikshat;
                +---------+--------------------+
                | emp_sal | emp_sal            |
                +---------+--------------------+
                |   35000 | 187.08286933869707 |
                |   10000 |                100 |
                |   35000 | 187.08286933869707 |
                |   20000 |  141.4213562373095 |
                |   15000 | 122.47448713915891 |
                +---------+--------------------+


    6th :-
         ROUND() Function :- This Function is used to Round a Numeric Field to Number of Decimal Specified that is Round..
                             # Round Up Function ka Used Decimal me kiya jata hai
                               Suppose
                                    +----+----------+----------+
                                    | id | name     | price    |
                                    +----+----------+----------+
                                    |  1 | Micromax | 35999.54 | # yaha par 35999.54,decimal 54 hai ROUND UP ka kaam hota hai ki agar
                                    |  2 | Samsung  | 30999.12 |    54 ki jagah par 34 ye ya 44 ye hota to value yese hi rehta but
                                    |  6 | Soni     | 15999.54 |    jab 55 hota hai to wo round up ho jata hai 6 me
                                    |  7 | OnePlus  | 25999.12 |    55 ye change ho kar 6 ho jayega, EX me dekhte hai
                                    |  8 | IPhone   | 99999.99 |
                                    +----+----------+----------+


            Ex :-
               select *,round(price,1) from Product_Emp;
                +----+----------+---------------+----------------+
                | id | name     | price         | round(price,1) |
                +----+----------+---------------+----------------+
                |  1 | Micromax | 00035999.5400 |        35999.5 |
                |  2 | Samsung  | 00030999.1200 |        30999.1 |
                |  3 | Soni     | 00015999.5400 |        15999.5 |
                |  4 | OnePlus  | 00025999.1200 |        25999.1 |
                |  5 | IPhone   | 00099999.9900 |       100000.0 |
                +----+----------+---------------+----------------+



    7th :-
        COUNT() :- COUNT Func returns the no. of rows that match a specified column/rows
           1st Step :-
              show databases;

           2nd Step :-
              use database_name;

           3rd Step :-
              show tables;

           4th Step :-
              select * from emp_details;  yaha par agar emp_name isme null hota to uske skip kar deta
                +--------+----------------+-----------------+-------------+------------+-------------+
                | emp_id | emp_name       | emp_dept        | emp_joining | emp_cell   | emp_address |
                +--------+----------------+-----------------+-------------+------------+-------------+
                |    101 | Abhishek Kumar | Python-Django   | 2020-06-24  | 9415058209 | Lucknow     |
                |    102 | Vidhi          | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                |    103 | vipin          | python-srapping | 2020-07-22  | 7838507122 | Gaziabad    |
                |    104 | manish         | python-srapping | 2018-03-22  | 7054537423 | Agra        |
                |    105 | Srishti        | HR-IT           | 2018-11-13  | 9069001580 | Gurugram    |
                |    106 | Mahima         | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                |    107 | Himanshu       | HR-IT           | 2017-05-13  | 9050508960 | Agar        |
                |    108 | Shweta Ghosh   | HR-IT           | 2018-02-15  | 7838000390 | Kolkata     |
                |    109 | Abhishek Singh | HR-IT           | 2017-02-05  | 8802029898 | Mumbai      |
                +--------+----------------+-----------------+-------------+------------+-------------+

           5 th Step :-
           Ex 1:-
              select count(emp_name) as emp_name from emp_details;
                +-----------------+
                |   (emp_name)    |
                +-----------------+
                |       9         |
                +-----------------+

           Ex 2:-
              select count(*) from emp_details;  # Ye Null ko bhi Count kar leta hai
                +----------+
                | count(*) |
                +----------+
                |        9 |
                +----------+

           Ex 3 :-

                +--------+----------------+-----------------+-------------+------------+-------------+
                | emp_id | emp_name       | emp_dept        | emp_joining | emp_cell   | emp_address |
                +--------+----------------+-----------------+-------------+------------+-------------+
                |    101 | Abhishek Kumar | Python-Django   | 2020-06-24  | 9415058209 | Lucknow     |
                |    102 | Vidhi          | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                |    103 | vipin          | python-srapping | 2020-07-22  | 7838507122 | Gaziabad    |
                |    104 | manish         | python-srapping | 2018-03-22  | 7054537423 | Agra        |
                |    105 | Srishti        | HR-IT           | 2018-11-13  | 9069001580 | Gurugram    |
                |    106 | Mahima         | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                |    107 | Himanshu       | HR-IT           | 2017-05-13  | 9050508960 | Agar        |
                |    108 | Shweta Ghosh   | HR-IT           | 2018-02-15  | 7838000390 | Kolkata     |
                |    109 | Abhishek Singh | HR-IT           | 2017-02-05  | 8802029898 | Mumbai      |
                +--------+----------------+-----------------+-------------+------------+-------------+

              select count(distinct emp_id) as  emp_id from emp_details;
                +--------+
                | emp_id |
                +--------+
                |      9 |
                +--------+


           Ex 4 :- Yaha par ye count karega ki kitne baar HR-IT aaya hai ya kuch bhi

              select count(emp_id) as emp_id from emp_details
              where emp_dept = 'HR-IT';   # yaha se hame pata chalta hai ki kitni baar HR-IT aaya hai mere table me..
                +--------+
                | emp_id |
                +--------+
                |      5 |
                +--------+




    8th :-
       UPPER (UCASE) :-
            Syntax :-

              Ex 1:-
               select upper(emp_name) as emp_name from emp_details;  # For UPPER
                +----------------+
                | emp_name       |
                +----------------+
                | ABHISHEK KUMAR |
                | VIDHI          |
                | VIPIN          |
                | MANISH         |
                | SRISHTI        |
                | MAHIMA         |
                | HIMANSHU       |
                | SHWETA GHOSH   |
                | ABHISHEK SINGH |
                +----------------+


              Ex 2:-
               select ucase(emp_name) as emp_name from emp_details;  # For UCASE
                +----------------+
                | emp_name       |
                +----------------+
                | ABHISHEK KUMAR |
                | VIDHI          |
                | VIPIN          |
                | MANISH         |
                | SRISHTI        |
                | MAHIMA         |
                | HIMANSHU       |
                | SHWETA GHOSH   |
                | ABHISHEK SINGH |
                +----------------+




    9th :-
       LOWER (LCASE) :-
            Syntax :-
              Ex 1:-
               select lower(emp_name) as emp_name from emp_details;
                +----------------+
                | emp_name       |
                +----------------+
                | abhishek kumar |
                | vidhi          |
                | vipin          |
                | manish         |
                | srishti        |
                | mahima         |
                | himanshu       |
                | shweta ghosh   |
                | abhishek singh |
                +----------------+

              Ex 2:-
               select lcase(emp_name) as emp_name from emp_details;
                +----------------+
                | emp_name       |
                +----------------+
                | abhishek kumar |
                | vidhi          |
                | vipin          |
                | manish         |
                | srishti        |
                | mahima         |
                | himanshu       |
                | shweta ghosh   |
                | abhishek singh |
                +----------------+



    10 :-
        MID Statement :-
            Ex :-
             select emp_id, emp_name,MID(emp_address , 1 ,3) AS city from emp_details;
                +--------+----------------+------+
                | emp_id | emp_name       | city |
                +--------+----------------+------+
                |    101 | Abhishek Kumar | Luc  |
                |    102 | Vidhi          | Del  |
                |    103 | vipin          | Gaz  |
                |    104 | manish         | Agr  |
                |    105 | Srishti        | Gur  |
                |    106 | Mahima         | Jai  |
                |    107 | Himanshu       | Aga  |
                |    108 | Shweta Ghosh   | Kol  |
                |    109 | Abhishek Singh | Mum  |
                +--------+----------------+------+



    11th :-
       SUBSTRING Statement :- This is Similar to MID Function
             Ex :-
              select emp_id, emp_name, substring(emp_address , 1 ,3) AS city from emp_details;
                +--------+----------------+------+
                | emp_id | emp_name       | city |
                +--------+----------------+------+
                |    101 | Abhishek Kumar | Luc  |
                |    102 | Vidhi          | Del  |
                |    103 | vipin          | Gaz  |
                |    104 | manish         | Agr  |
                |    105 | Srishti        | Gur  |
                |    106 | Mahima         | Jai  |
                |    107 | Himanshu       | Aga  |
                |    108 | Shweta Ghosh   | Kol  |
                |    109 | Abhishek Singh | Mum  |
                +--------+----------------+------+


    12th :-
       LENGTH FUNCTION :-
              Ex :-
               select emp_id, emp_name, length(emp_address) AS city from emp_details;
                +--------+----------------+------+
                | emp_id | emp_name       | city |
                +--------+----------------+------+
                |    101 | Abhishek Kumar |    7 |
                |    102 | Vidhi          |    5 |
                |    103 | vipin          |    8 |
                |    104 | manish         |    4 |
                |    105 | Srishti        |    8 |
                |    106 | Mahima         |    6 |
                |    107 | Himanshu       |    4 |
                |    108 | Shweta Ghosh   |    7 |
                |    109 | Abhishek Singh |    6 |
                +--------+----------------+------+


    13tn :-
       CONCAT :- This Function is used to add 2 column in tables that is CONCAT..
              Ex 1:-
               select emp_id, CONCAT(emp_name, '  ', emp_dept) AS name,emp_address from emp_details;
                +--------+-------------------------------+-------------+
                | emp_id | name                          | emp_address |
                +--------+-------------------------------+-------------+
                |    101 | Abhishek Kumar  Python-Django | Lucknow     |
                |    102 | Vidhi  python-srapping        | Delhi       |
                |    103 | vipin  python-srapping        | Gaziabad    |
                |    104 | manish  python-srapping       | Agra        |
                |    105 | Srishti  HR-IT                | Gurugram    |
                |    106 | Mahima  HR-IT                 | Jaipur      |
                |    107 | Himanshu  HR-IT               | Agar        |
                |    108 | Shweta Ghosh  HR-IT           | Kolkata     |
                |    109 | Abhishek Singh  HR-IT         | Mumbai      |
                +--------+-------------------------------+-------------+


              Ex 2:-
               select emp_id, CONCAT(emp_cell,' ',(Select MID(emp_address , 1 ,3))) AS cell_city from emp_details;
                +--------+----------------+
                | emp_id | cell_city      |
                +--------+----------------+
                |    101 | 9415058209 Luc |
                |    102 | 9650570534 Del |
                |    103 | 7838507122 Gaz |
                |    104 | 7054537423 Agr |
                |    105 | 9069001580 Gur |
                |    106 | 8279836664 Jai |
                |    107 | 9050508960 Aga |
                |    108 | 7838000390 Kol |
                |    109 | 8802029898 Mum |
                +--------+----------------+




    14tn :-
       REVERSE FUNCTION :- This Function is used to Reverse the Order of Letter in String that is REVERSE..

              Ex :-
               select  emp_id,emp_name,REVERSE(emp_address) AS city from emp_details;
                +--------+----------------+----------+
                | emp_id | emp_name       | city     |
                +--------+----------------+----------+
                |    101 | Abhishek Kumar | wonkcuL  |
                |    102 | Vidhi          | ihleD    |
                |    103 | vipin          | dabaizaG |
                |    104 | manish         | argA     |
                |    105 | Srishti        | marguruG |
                |    106 | Mahima         | rupiaJ   |
                |    107 | Himanshu       | ragA     |
                |    108 | Shweta Ghosh   | atakloK  |
                |    109 | Abhishek Singh | iabmuM   |
                +--------+----------------+----------+


    15tn :-
       NOW() Function :-
              Ex :-
               select  emp_id,emp_name,emp_address,NOW() AS DateTime from emp_details;
                +--------+----------------+-------------+---------------------+
                | emp_id | emp_name       | emp_address | DateTime            |
                +--------+----------------+-------------+---------------------+
                |    101 | Abhishek Kumar | Lucknow     | 2020-12-10 23:28:46 |
                |    102 | Vidhi          | Delhi       | 2020-12-10 23:28:46 |
                |    103 | vipin          | Gaziabad    | 2020-12-10 23:28:46 |
                |    104 | manish         | Agra        | 2020-12-10 23:28:46 |
                |    105 | Srishti        | Gurugram    | 2020-12-10 23:28:46 |
                |    106 | Mahima         | Jaipur      | 2020-12-10 23:28:46 |
                |    107 | Himanshu       | Agar        | 2020-12-10 23:28:46 |
                |    108 | Shweta Ghosh   | Kolkata     | 2020-12-10 23:28:46 |
                |    109 | Abhishek Singh | Mumbai      | 2020-12-10 23:28:46 |
                +--------+----------------+-------------+---------------------+









35) What is DECIMAL Datatype?
Ans) Decimal :-

         Syntax :- column_name DECIMAL (T,D)
                   WHERE
                   T = Total digit
                        Range 1-65   # yaha 1 se 65 ka mtlb hota hai like 123456778.98766 = 14 no used kiya gya hai yaha
                                           par just ussi type me ham 65 no tak use kar skte hai..

                   D = Digit after Decimal (mtlb decimal ke baad ke number ko D me defined karte hai).
                        Range 1 - 30 # iska Range 1 se 30 tak hoga mtlb decimal ke baad 30 place tak hi number likh skte hai


                   NOTE:- T ke value se jada D ki value nhi ho skti hai

                   Condition:-

                         1 :- column_name DECIMAL(T);
                         2 :- COLUMN_NAME DECIMAL (T,0);
                         3:- COLUMN_NAME DECIMAL;
                              here defaul T = 10 ho jayega



         2) SIZE :-

                        +------------------+-------------------+
                        | No. of Digits    | Nunber of Bytes   |
                        +------------------+-------------------+
                        |        0         |        0          |
                        |        1-2       |        1          |
                        |        3-4       |        2          |
                        |        5-6       |        3          |
                        |        7-9       |        4          |
                        +------------------+-------------------+

                        # yaha par 0 Digit ke liye 0 byte use hoga
                          1-2 ke liye 1 bytes ka use hoga
                            Suppose :-
                               166666.45 ye mera number hai isme kitna Bytes usedd hoga?

                                   Isme pehle decimal se pehle wale number ki counting kar lete hai
                                    jo ki hai 6 mtlb 3 byte use hoga ab decimal ke baad me number hai 2 mtlb 1 byte use hoga
                                    means total bytes hamara use hoga 3 + 1 = 4 Byte used hoga..
                            Suppose :--
                                  199999993333222.87   ye number ho tab kese find karenge kyoki RANGE 7-9 tak hi hai?
                                                      iske liye decimal se pehle ke number ko count kar lete hai
                                                      jo ki hai 15 iske liye homko 15 ko break karna hoga 9 aur 6 me
                                                      9 ka byte hai 4
                                                      6 ka byte hai 3
                                                      ab decimal number hai 2 jiska byte hoga 1
                                                      Total byte = 4 + 3 + 1 = 8 Bytes used hoga iss Number ke Liye..

         Ex 1:-
                1st Step :-
                        create table Product
                        (
                        id int auto_increment primary key,
                        name varchar (50) not null,
                        price decimal (7,2) not null
                        );

                2nd Step :-
                        insert into Product (name,price)
                        values('Micromax',35999.54),
                        ('Samsung',30999.12),
                        ('Soni',15999.54),
                        ('OnePlus',25999.12),
                        ('IPhone',99999.99);

                3rd Step :-
                         select * from Product;
                         +----+----------+----------+
                         | id | name     | price    |
                         +----+----------+----------+
                         |  1 | Micromax | 35999.54 |
                         |  2 | Samsung  | 30999.12 |
                         |  6 | Soni     | 15999.54 |
                         |  7 | OnePlus  | 25999.12 |
                         |  8 | IPhone   | 99999.99 |
                         +----+----------+----------+


         3) ZEROFILL :-
                  create table Product
                  (
                  id int auto_increment primary key,
                  name varchar (50) not null,
                  price decimal (7,2) Zerofill
                  );

                     # Yaha par ZeroFill ka benefit ye hota hai ki  man lo Decimal(7,2) diya hai but jab VALUE INSERT kar
                       rhe hote hai TABLE me uss time man lo hamne VALUE 250.78 ye diya tab ZEROFILL ki help se Number Of
                        Range jo 7 hai wo Zerofill ki Help se Automatic Fullfill Ho jata hai aur koi Error bhi nhi aata hai
                          But yaha parr ek baat dhyaan me rkhne wali ye hai ki Zerofill decimal ke baad value nhi INSERT karega
                          kyoki usko hamne Restrict kar diya hai 2 value de kar..

             Ex :-
                1st Step :-
                        create table Product_Emp
                        (
                        id int auto_increment primary key,
                        name varchar (50) not null,
                        price decimal (7,2) not null
                        );

                2nd Step :-
                        insert into Product_Emp (name,price)
                        values('Micromax',35999.54),
                        ('Samsung',30999.12),
                        ('Soni',15999.54),
                        ('OnePlus',25999.12),
                        ('IPhone',99999.99);

                3rd Step :-
                         select * from Product_Emp;  # yaha par automatic ZERO aa rha hai yahi kaam hota hai ZEROFILL ka
                        +----+----------+---------------+
                        | id | name     | price         |
                        +----+----------+---------------+
                        |  1 | Micromax | 00035999.5400 |
                        |  2 | Samsung  | 00030999.1200 |
                        |  3 | Soni     | 00015999.5400 |
                        |  4 | OnePlus  | 00025999.1200 |
                        |  5 | IPhone   | 00099999.9900 |
                        +----+----------+---------------+











37) What is GROUP BY ?
Ans)

      Ex 1:-
       Original table :-
            +--------+----------+----------------+---------+-------------+------------+-------------+
            | emp_id | emp_name | emp_dept       | emp_sal | emp_joining | emp_cell   | emp_address |
            +--------+----------+----------------+---------+-------------+------------+-------------+
            |    101 | Harish   | Owner & CEO    | 3500000 | 2012-07-22  | 9891901121 | Himachal    |
            |    102 | Ankit    | General Mn.    | 1000000 | 2012-10-05  | 94774544   | Delhi       |
            |    103 | Roshan   | Project Mn.    |  100000 | 2013-07-05  | 94544      | Bihar       |
            |    104 | Abhshek  | Python-Django  |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
            |    105 | Kalindi  | Java           |   10000 | 2019-07-05  | 945774     | Delhi       |
            |    106 | Sagufta  | java           |   35000 | 2018-03-22  | 7545       | Kanpur      |
            |    107 | Pawan    | HTML Frantend  |   20000 | 2019-02-14  | 755788555  | Gaziabad    |
            |    108 | Samir    | Java           |   15000 | 2018-04-22  | 22878686   | Bihar       |
            |    109 | Adib     | Java           |   35000 | 2016-04-22  | 7474586    | Jaipur      |
            |    110 | Harish   | Java           |    8000 | 2020-01-22  | 5578686    | Ahmedabad   |
            |    111 | Avinash  | IOT            |    8000 | 2020-10-22  | 557864556  | Mumbai      |
            |    112 | Abhshek  | Python-Machine |   25000 | 2017-03-22  | 6665478    | Agar        |
            |    113 | Naveen   | Andriod        |   25000 | 2017-05-04  | 33554864   | Bhopal      |
            +--------+----------+----------------+---------+-------------+------------+-------------+

       select emp_id,emp_name, min(emp_sal) as min_sal from pratikshat group by emp_name;   # yaha par Abhishek jo
                                                                                             python-django developer hai wo replace ho gya hai kyoki  yaha par min sal find kar rha hai
            +--------+----------+---------+
            | emp_id | emp_name | min_sal |
            +--------+----------+---------+
            |    101 | Harish   |    8000 |
            |    102 | Ankit    | 1000000 |
            |    103 | Roshan   |  100000 |
            |    104 | Abhshek  |   25000 |
            |    105 | Kalindi  |   10000 |
            |    106 | Sagufta  |   35000 |
            |    107 | Pawan    |   20000 |
            |    108 | Samir    |   15000 |
            |    109 | Adib     |   35000 |
            |    111 | Avinash  |    8000 |
            |    113 | Naveen   |   25000 |
            +--------+----------+---------+



      Ex 2:-
        Original Table Details :-
                    +--------+---------+-----------+
                    | ord_id | cust_id | seller_id |
                    +--------+---------+-----------+
                    |      1 |     101 |       201 |
                    |      2 |     102 |       210 |
                    |      3 |     103 |       225 |
                    |      4 |     101 |       226 |
                    |      5 |     102 |       310 |
                    |      6 |     104 |       325 |
                    |      7 |     103 |       350 |
                    |      8 |     105 |       419 |
                    |      9 |     102 |       450 |
                    |     10 |     101 |       210 |
                    |     11 |     105 |       455 |
                    |     12 |     104 |       560 |
                    +--------+---------+-----------+

        select cust_id, count(*) from Order_Emp where cust_id = 101;   # yaha par 101 ne kitne oder kiye hai ye find kar rha hu
                    +---------+----------+
                    | cust_id | count(*) |
                    +---------+----------+
                    |     101 |        3 |
                    +---------+----------+

        A) Jab har Cust_Id ne kitna order kiya, means one by one na kar ke Ek sath find karna ho ki kiss CUSTOMER ne Kitna
             Order kiya hai, Ye Find karne ke liye ham karte hai, dekhte EX..

             Ex :-
               select cust_id, count(*) from Order_Emp group by cust_id;  # Ye cust_id se total order kitne hua hai find kar ke dega
                    +---------+----------+
                    | cust_id | count(*) |
                    +---------+----------+
                    |     101 |        3 |
                    |     102 |        3 |
                    |     103 |        2 |
                    |     104 |        2 |
                    |     105 |        2 |
                    +---------+----------+











38) What is HAVING CLAUSE?
Ans) Having:-

      Syntax :-
        Original table :-
                    +--------+----------+----------------+---------+-------------+------------+-------------+
                    | emp_id | emp_name | emp_dept       | emp_sal | emp_joining | emp_cell   | emp_address |
                    +--------+----------+----------------+---------+-------------+------------+-------------+
                    |    101 | Harish   | Owner & CEO    | 3500000 | 2012-07-22  | 9891901121 | Himachal    |
                    |    102 | Ankit    | General Mn.    | 1000000 | 2012-10-05  | 94774544   | Delhi       |
                    |    103 | Roshan   | Project Mn.    |  100000 | 2013-07-05  | 94544      | Bihar       |
                    |    104 | Abhshek  | Python-Django  |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
                    |    105 | Kalindi  | Java           |   10000 | 2019-07-05  | 945774     | Delhi       |
                    |    106 | Sagufta  | java           |   35000 | 2018-03-22  | 7545       | Kanpur      |
                    |    107 | Pawan    | HTML Frantend  |   20000 | 2019-02-14  | 755788555  | Gaziabad    |
                    |    108 | Samir    | Java           |   15000 | 2018-04-22  | 22878686   | Bihar       |
                    |    109 | Adib     | Java           |   35000 | 2016-04-22  | 7474586    | Jaipur      |
                    |    110 | Harish   | Java           |    8000 | 2020-01-22  | 5578686    | Ahmedabad   |
                    |    111 | Avinash  | IOT            |    8000 | 2020-10-22  | 557864556  | Mumbai      |
                    |    112 | Abhshek  | Python-Machine |   25000 | 2017-03-22  | 6665478    | Agar        |
                    |    113 | Naveen   | Andriod        |   25000 | 2017-05-04  | 33554864   | Bhopal      |
                    +--------+----------+----------------+---------+-------------+------------+-------------+

         Ex :-
            select emp_id,emp_name,min(emp_sal) AS min_sal from pratikshat group by emp_name HAVING min(emp_sal) >25000; # yaha par sys confused ho gya hai duplicate value par like Harish and Abhishek 2 time hai iss liye
                    +--------+----------+---------+
                    | emp_id | emp_name | min_sal |
                    +--------+----------+---------+
                             |    102 | Ankit    | 1000000 |
                    |    103 | Roshan   |  100000 |
                    |    106 | Sagufta  |   35000 |
                    |    109 | Adib     |   35000 |
                    +--------+----------+---------+



         Ex :-
            Original Table Details :-
                    +--------+---------+-----------+
                    | ord_id | cust_id | seller_id |
                    +--------+---------+-----------+
                    |      1 |     101 |       201 |
                    |      2 |     102 |       210 |
                    |      3 |     103 |       225 |
                    |      4 |     101 |       226 |
                    |      5 |     102 |       310 |
                    |      6 |     104 |       325 |
                    |      7 |     103 |       350 |
                    |      8 |     105 |       419 |
                    |      9 |     102 |       450 |
                    |     10 |     101 |       210 |
                    |     11 |     105 |       455 |
                    |     12 |     104 |       560 |
                    +--------+---------+-----------+


            select cust_id,count(*)as count from Order_Emp group by cust_id HAVING count >2;
                    +---------+-------+
                    | cust_id | count |
                    +---------+-------+
                    |     101 |     3 |
                    |     102 |     3 |
                    +---------+-------+












39) Why do we need Multi Table in SQL?
Ans) Jab hamare table ke kissi column me ek se jada data stored hota hai uss time developer ke jada pblm ho jati hai like inche diye hua table me dekh skte hai
       yaha par course column me bahut sare data invalved hai iss liye ham alag se course ke liye table banayenge aur usko connect kar dete hai main table se
                     +----+-----------+-----------+--------+--------------------------------+
                     | ID | Name      | City      | Pin    | Course                         |
                     +----+-----------+-----------+--------+--------------------------------+
                     |  1 | Abhishek  | Frankfurt | 776654 | Python-django,Machine-learning |
                     |  2 | Sagun     | Lucknow   |    522 | AI,Machine-learning            |
                     |  3 | Sanskriti | Delhi     |  11011 | Dot Net, Java, Angular         |
                     |  4 | Rudhansh  | Mumbai    |  55244 | Docter,Engineering             |
                     +----+-----------+-----------+--------+--------------------------------+












40) What is DELETE , UPDATE ?
Ans)

A) DELETE Function me ek bahut hi important point ye hai, agar ham kissi table ko delete kar rhe hai aur uss table ka koi child table
       table hoga to ham Parent table ko direct delete nhikar payenge
       Uss ke liye hamko pehle child table ko delete karna hoga tab ja ke ham Parent Table ko delete kar payenge mtlb jiss Table ko hamko
       delete karna tha wo Table tab delete hoga jab uska child Table delete ho chuka hoga

       # Child Table wo Table hota hai jisme FOREIGN KEY hota hai, Aur Parent Table  wo hota hai jiske karn FOREIGN KEY TABLE ban
       raha hota hai


       Ex 1:-
         drop table order_emp;
         ERROR 3730 (HY000): Cannot drop table 'order_emp' referenced by a foreign key constraint 'ord_id_fk' on table 'product_sell'.

       Ex 2:-
         delete from order_emp # col bhi delete nhi kar skte hai Parent Table ka, order_emp ye parent Table hai aur iska Child Table 'product_sell' ye hai... Child Table me hi FOREIGN KEY hota hai
         where ord_id = 1;
         ERROR 3730 (HY000): Cannot drop table 'order_emp' referenced by a foreign key constraint 'ord_id_fk' on table 'product_sell'.


       Ex 3:- Agar Delete karna ho kisi col ko PARENT TABLE se to uske liye hamko pehle FOREIGN KEY TABLE se uss sare record ko delete
             karna hoga jo PARENT TABLE ki col me hai,
              Supposed :-
                PARENT TABLE hamara ye hai (order_emp):-           # yaha se ord_id = 1 ka 1st record delete karne ke liye pehle Child Table
                    +--------+---------+-----------+                se jitne bhi 1 hai wo delete karna hoga
                    | ord_id | cust_id | seller_id |
                    +--------+---------+-----------+
                    |      1 |     101 |       201 |
                    |      2 |     102 |       210 |
                    |      3 |     103 |       225 |
                    |      4 |     101 |       226 |
                    |      5 |     102 |       310 |
                    |      6 |     104 |       325 |
                    |      7 |     103 |       350 |
                    |      8 |     105 |       419 |
                    |      9 |     102 |       450 |
                    |     10 |     101 |       210 |
                    |     11 |     105 |       455 |
                    |     12 |     104 |       560 |
                    +--------+---------+-----------+


                CHILD TABLE / FOREIGN KEY TABLE (product_sell) :-    # ord_id me jitne bhi 1 hai sab ko delete karna hoga tab jaa kar PARENT TABLE
                    +--------+----------------+--------+                 se ord_id ki 1st record delete hogi...
                    | pro_id | pro_name       | ord_id |
                    +--------+----------------+--------+
                    |    201 | Micromax M20   |      1 |
                    |    202 | Nokia N10      |      1 |
                    |    203 | IPhone XS-Max  |      1 |
                    |    204 | Samsung J7     |      2 |
                    |    205 | Micromax M10   |      2 |
                    |    206 | BlackBerry B12 |      3 |
                    |    207 | Fortuner       |      3 |
                    |    208 | Masrati        |      4 |
                    |    209 | Bugati Ciron   |      1 |
                    +--------+----------------+--------+


                    1st Step :- pehle CHILD TABLE se Record delete karna hoga
                          delete from product_sell
                          where pro_id = 201;

                          delete from product_sell
                          where pro_id = 202;

                          delete from product_sell
                          where pro_id = 203;

                          delete from product_sell
                          where pro_id = 209;

                    +--------+----------------+--------+
                    | pro_id | pro_name       | ord_id |
                    +--------+----------------+--------+
                    |    204 | Samsung J7     |      2 |
                    |    205 | Micromax M10   |      2 |
                    |    206 | BlackBerry B12 |      3 |
                    |    207 | Fortuner       |      3 |
                    |    208 | Masrati        |      4 |
                    +--------+----------------+--------+



                    2nd Step :- Ab PARENT TABLE se 1 record delete hoga

                      delete from order_emp
                      where ord_id = 1;   # ab ye delete ho jayega

                        +--------+---------+-----------+
                        | ord_id | cust_id | seller_id |
                        +--------+---------+-----------+
                        |      2 |     102 |       210 |
                        |      3 |     103 |       225 |
                        |      4 |     101 |       226 |
                        |      5 |     102 |       310 |
                        |      6 |     104 |       325 |
                        |      7 |     103 |       350 |
                        |      8 |     105 |       419 |
                        |      9 |     102 |       450 |
                        |     10 |     101 |       210 |
                        |     11 |     105 |       455 |
                        |     12 |     104 |       560 |
                        +--------+---------+-----------+



                1st Step :-
                        insert into product
                        values(1,'Micromax',101),
                        (2,'Samsung',101),
                        (3,'Soni',101),
                        (4,'OnePlus',102),
                        (5,'IPhone',102),
                        (6,'BlackBerry',103),
                        (7,'IPhone',104),
                        (8,'LG',104),
                        (9,'Spice Mobile',104),
                        (10,'Nokia',105),
                        (11,'IBoll',105),
                        (12,'IPhone',105);

                2nd Step :-
                    select * from product;
                        +--------+--------------+---------+
                        | pro_id | pro_name     | cust_id |
                        +--------+--------------+---------+
                        |      1 | Micromax     |     101 |
                        |      2 | Samsung      |     101 |
                        |      3 | Soni         |     101 |
                        |      4 | OnePlus      |     102 |
                        |      5 | IPhone       |     102 |
                        |      6 | BlackBerry   |     103 |
                        |      7 | IPhone       |     104 |
                        |      8 | LG           |     104 |
                        |      9 | Spice Mobile |     104 |
                        |     10 | Nokia        |     105 |
                        |     11 | IBoll        |     105 |
                        |     12 | IPhone       |     105 |
                        +--------+--------------+---------+





 B) DIRECT PARENT TABLE ke RECORD ko DELETE karne ka Method :- Ye Metod usekarke Direct Parent Table ke Record ko delete kar skte hai
                                                               isska benefit ye hoga ki Child Table ka Record Automatically Delete ho jata
                                                               hai, Child Table ke Record ko Delete karne ki jarurat nhi parti hai..


      1) ON DELETE CASCADE  :- Iss Case me agar PARENT TABLE ke kissi Record ko delete karte hai to CHILD TABLE me bhi uss Record jo Parent
                               table ka hai wo infor Child Tbale se bhi automatically delete ho jata hai

      2) ON DELETE SET NULL  :- Iss Case me agr ham koi Record PARENT TABLE se delete karte hai to isse CHILD TABLE me uss Record se related
                                 data delete nhi hoga,balki hoga ye ki Foreign key wale column me NULL VALUE AUTOMATICALLY Set ho jayega

      3) ON DELETE ON ACTION  :-
      4) ON DELETE RESTRICT


      1) ON DELETE CASCADE :-

             1st Step :- Create Table1

                    create table customer
                    (
                    cust_id int auto_increment primary key,
                    cust_name varchar (50) not null,
                    cust_add text not null

                    select * from customer;
                      +---------+-----------+----------+
                      | cust_id | cust_name | cust_add |
                      +---------+-----------+----------+
                      |     101 | Abhishek  | Himachal |
                      |     102 | Vidhi     | Delhi    |
                      |     103 | Vipin     | Bihar    |
                      |     104 | Akshara   | Lucknow  |
                      |     105 | Surbhi    | Delhi    |
                      |     106 | Ankita    | Kanpur   |
                      +---------+-----------+----------+


            2nd Step :- Create Table 2:-
                   create table seller
                   (
                   o_id int (100) auto_increment primary key,
                   o_name varchar (50) not null,
                   cust_id int (100),          Iss case me ye iss column me Not Null nhi de skte hai otherwise Null Value nhi set hoga FOREIGN KEY Column me
                   constraint order_customer_fk
                   FOREIGN KEY(cust_id) REFERENCES customer(cust_id)
                   ON DELETE CASCADE
                   );

            3rd Step :- Insert Data into TABLE 2--
                   insert into order_tab
                   values(1,'Micromax',101),
                   (2,'IPhone',101),
                   (3,'BlackBerry',101),
                   (4,'Nokia',102),
                   (5,'LG',102),
                   (6,'Samsung',103),
                   (7,'Spice',104),
                   (8,'Simence',104),
                   (9,'Motorola',104),
                   (10,'MI',105),
                   (11,'Lava',105),
                   (12,'IBoll',105);

                    +------+------------+---------+
                    | o_id | o_name     | cust_id |
                    +------+------------+---------+
                    |    1 | Micromax   |     101 |
                    |    2 | IPhone     |     101 |
                    |    3 | BlackBerry |     101 |
                    |    4 | Nokia      |     102 |
                    |    5 | LG         |     102 |
                    |    6 | Samsung    |     103 |
                    |    7 | Spice      |     104 |
                    |    8 | Simence    |     104 |
                    |    9 | Motorola   |     104 |
                    |   10 | MI         |     105 |
                    |   11 | Lava       |     105 |
                    |   12 | IBoll      |     105 |
                    +------+------------+---------+


            4th Delete Record :- Delete Record from Table1(PARENT TABLE)

                 DELETE FROM customer
                 where cust_id = 1;

                 select * from customer;
                    +---------+-----------+----------+
                    | cust_id | cust_name | cust_add |
                    +---------+-----------+----------+
                    |     102 | Vidhi     | Delhi    |
                    |     103 | Vipin     | Bihar    |
                    |     104 | Akshara   | Lucknow  |
                    |     105 | Surbhi    | Delhi    |
                    |     106 | Ankita    | Kanpur   |
                    +---------+-----------+----------+

                 select * from order_tab;
                    +------+------------+---------+
                    | o_id | o_name     | cust_id |
                    +------+------------+---------+
                    |    4 | Nokia      |     102 |
                    |    5 | LG         |     102 |
                    |    6 | Samsung    |     103 |
                    |    7 | Spice      |     104 |
                    |    8 | Simence    |     104 |
                    |    9 | Motorola   |     104 |
                    |   10 | MI         |     105 |
                    |   11 | Lava       |     105 |
                    |   12 | IBoll      |     105 |
                    +------+------------+---------+





      2) ON DELETE SET NULL :-
           1st Step :- create Table 2 --
                create table seller
                (
                s_id int (100) auto_increment primary key,
                s_name varchar (50) not null,
                cust_id int (100),
                constraint seller_customer_fk
                FOREIGN KEY(cust_id) REFERENCES customer(cust_id)
                ON DELETE SET NULL
                );

           2nd Step :- Insert Data in Table 2 --

                insert into seller
                values(1,'Amit',101),
                (2,'Sourav',101),
                (3,'Himanshu',101),
                (4,'Nikita',102),
                (5,'Tanzila',102),
                (6,'Tehsin',103),
                (7,'Sabia',104),
                (8,'Kalindi',104),
                (9,'Sagufta',104),
                (10,'Aakash',105),
                (11,'Abhinav',105),
                (12,'Vipin',105);

           3rd Step :- Show Table 2 --
                select * from seller;
                    +------+----------+---------+
                    | s_id | s_name   | cust_id |
                    +------+----------+---------+
                    |    1 | Amit     |     101 |
                    |    2 | Sourav   |     101 |
                    |    3 | Himanshu |     101 |
                    |    4 | Nikita   |     102 |
                    |    5 | Tanzila  |     102 |
                    |    6 | Tehsin   |     103 |
                    |    7 | Sabia    |     104 |
                    |    8 | Kalindi  |     104 |
                    |    9 | Sagufta  |     104 |
                    |   10 | Aakash   |     105 |
                    |   11 | Abhinav  |     105 |
                    |   12 | Vipin    |     105 |
                    +------+----------+---------+

           4th Step :- DELETE Record From Table 1 (PARENT TABLE) --

                delete from customer
                where cust_id = 1 ;
                    +---------+-----------+----------+
                    | cust_id | cust_name | cust_add |
                    +---------+-----------+----------+
                    |     102 | Vidhi     | Delhi    |
                    |     103 | Vipin     | Bihar    |
                    |     104 | Akshara   | Lucknow  |
                    |     105 | Surbhi    | Delhi    |
                    |     106 | Ankita    | Kanpur   |
                    +---------+-----------+----------+

                select * from seller;
                    +------+----------+---------+
                    | s_id | s_name   | cust_id |
                    +------+----------+---------+
                    |    1 | Amit     |   NULL  |
                    |    2 | Sourav   |   NULL  |
                    |    3 | Himanshu |   NULL  |
                    |    4 | Nikita   |     102 |
                    |    5 | Tanzila  |     102 |
                    |    6 | Tehsin   |     103 |
                    |    7 | Sabia    |     104 |
                    |    8 | Kalindi  |     104 |
                    |    9 | Sagufta  |     104 |
                    |   10 | Aakash   |     105 |
                    |   11 | Abhinav  |     105 |
                    |   12 | Vipin    |     105 |
                    +------+----------+---------+



      3) ON DELETE NO ACTION / ON DELETE RESTRICT :- Iss ka mtlb yhihai ki ham direct DELETE nhi kar skte hai PARENT TABLE ke Record ko

           1st Step : Create Table 2 --
                create table cancellation
                (
                c_id int (100) auto_increment primary key,
                c_name varchar (50) not null,
                cust_id int (100),
                constraint cancellation_customer_fk
                FOREIGN KEY(cust_id) REFERENCES customer(cust_id)
                ON DELETE NO ACTION
                );

           2nd Step :- Insert Data --
                   insert into cancellation
                   values(1,'Micromax',101),
                   (2,'IPhone',101),
                   (3,'LG',102),
                   (4,'Samsung',103),
                   (5,'Motorola',104),
                   (6,'MI',105);

           3rd Step :- Show Table 2
                   select * from cancellation;
                    +------+----------+---------+
                    | c_id | c_name   | cust_id |
                    +------+----------+---------+
                    |    1 | Micromax |     101 |
                    |    2 | IPhone   |     101 |
                    |    3 | LG       |     102 |
                    |    4 | Samsung  |     103 |
                    |    5 | Motorola |     104 |
                    |    6 | MI       |     105 |
                    +------+----------+---------+

           4th Step :- DELETE Record from Table 1 (PARENT TABLE) --
                   DELETE FROM customer
                   where cust_id = 5;
                   Error Show :- means Iss Method ke through PARENT TABLE ke Data ko DELETE nhi kiya ja skta hai

                Iss Case me pehle CHILD TABLE se Record ko delete karna hoga tab jaa kar PARENT TABLE se Record ko Delete kar skte hai

                1st Step :- pehle CHILD TABLE se Record delete karna hoga, iss type se delete hoga
                          delete from cancellation;
                          where c_id = 1;

                          delete from cancellation;
                          where c_id = 2;

                        # Ab PRARENT TABLE se 1 NO ka Record DELETE kar skte hai
                          delete from customer;
                          where cust_id = 101;
                            +---------+-----------+----------+
                            | cust_id | cust_name | cust_add |
                            +---------+-----------+----------+
                            |     102 | Abhishek  | Himachal |
                            |     103 | Vipin     | Bihar    |
                            |     104 | Akshara   | Lucknow  |
                            |     105 | Surbhi    | Delhi    |
                            |     106 | Ankita    | Kanpur   |
                            +---------+-----------+----------+



    B) UPDATE CLAUSE :- Here also 4 type of Updatas Clause are having :-
      1) ON DELETE CASCADE :-

      2) ON DELETE SET NULL :-

      3) ON DELETE ON ACTION :-

      4) ON DELETE RESTRICT :-


      1) ON DELETE CASCADE :-
            1st Step :- Create Table 2:-
                create table department
                (
                d_id int (100) auto_increment primary key,
                d_name varchar (50) not null,
                cust_id int (100),
                constraint department_customer_fk
                FOREIGN KEY(cust_id) REFERENCES customer(cust_id)
                ON UPDATE CASCADE
                );

            2nd Step :- Insert Data into Table 2:-
                insert into department
                values(1,'IT',101),
                (2,'Generlist',101),
                (3,'Design',102),
                (4,'Mechanical',103),
                (5,'Electrical ',104),
                (6,'Media',105);

            3rd Step :- Select * from department;
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | IT              |     201 |
                |    2 | Generlist       |     201 |
                |    3 | Design          |     102 |
                |    4 | Mechanical      |     103 |
                |    5 | Electrical      |     104 |
                |    6 | Media           |     105 |
                +------+-----------------+---------+


            4th Update : - Update data into table 1 (PARENT TABLE) :-
               UPDATE customer
               SET cust_id = 201
               where cust_id = 101;          # This is PARENT TABLE
               +---------+-----------+----------+
               | cust_id | cust_name | cust_add |
               +---------+-----------+----------+
               |     102 | Vidhi     | Delhi    |
               |     103 | Vipin     | Bihar    |
               |     104 | Akshara   | Lucknow  |
               |     105 | Surbhi    | Delhi    |
               |     106 | Ankita    | Kanpur   |
               |     201 | Abhishek  | Himachal |
               +---------+-----------+----------+

               select * from department;       # This Table is CHILD TABLE
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | IT              |     201 |
                |    2 | Generlist       |     201 |
                |    3 | Design          |     102 |
                |    4 | Mechanical      |     103 |
                |    5 | Electrical      |     104 |
                |    6 | Media           |     105 |
                +------+-----------------+---------+




      2) ON DELETE SET NULL :-
            1st Step :- Create Table 2:-
                create table technology
                (
                t_id int (100) auto_increment primary key,
                t_name varchar (50) not null,
                cust_id int (100),
                constraint department_customer_fk
                FOREIGN KEY(cust_id) REFERENCES customer(cust_id)
                ON UPDATE SET NULL
                );

            2nd Step :- Insert Data into Table 2:-
                insert into technology
                values(1,'Django',101),
                (2,'Machine Learing',101),
                (3,'Java Script',102),
                (4,'Angular JS',103),
                (5,'HR-Admin',104),
                (6,'HR-General',105);

            3rd Step :- Select * from technology;
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | Django          |     101 |
                |    2 | Machine Learing |     101 |
                |    3 | Java Script     |     102 |
                |    4 | Angular JS      |     103 |
                |    5 | HR-Admin        |     104 |
                |    6 | HR-General      |     105 |
                +------+-----------------+---------+


            4th Update : - Update data into table 1 (PARENT TABLE) :-
               UPDATE customer
               SET cust_id = 201
               where cust_id = 101;          # This is PARENT TABLE
               +---------+-----------+----------+
               | cust_id | cust_name | cust_add |
               +---------+-----------+----------+
               |     102 | Vidhi     | Delhi    |
               |     103 | Vipin     | Bihar    |
               |     104 | Akshara   | Lucknow  |
               |     105 | Surbhi    | Delhi    |
               |     106 | Ankita    | Kanpur   |
               |     201 | Abhishek  | Himachal |
               +---------+-----------+----------+

               select * from technology;       # This Table is CHILD TABLE
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | Django          |   NULL  |
                |    2 | Machine Learing |   NULL  |
                |    3 | Java Script     |     102 |
                |    4 | Angular JS      |     103 |
                |    5 | HR-Admin        |     104 |
                |    6 | HR-General      |     105 |
                +------+-----------------+---------+





      3) ON DELETE ON ACTION / ON DELETE RESTRICT :-

           1st Step : Create Table 2 --
                create table cancellation
                (
                c_id int (100) auto_increment primary key,
                c_name varchar (50) not null,
                cust_id int (100),
                constraint cancellation_customer_fk
                FOREIGN KEY(cust_id) REFERENCES customer(cust_id)
                ON UPDATE NO ACTION
                );

           2nd Step :- Insert Data --
                   insert into cancellation
                   values(1,'Micromax',101),
                   (2,'IPhone',101),
                   (3,'LG',102),
                   (4,'Samsung',103),
                   (5,'Motorola',104),
                   (6,'MI',105);

           3rd Step :- Show Table 2
                   select * from cancellation;
                    +------+----------+---------+
                    | c_id | c_name   | cust_id |
                    +------+----------+---------+
                    |    1 | Micromax |     101 |
                    |    2 | IPhone   |     101 |
                    |    3 | LG       |     102 |
                    |    4 | Samsung  |     103 |
                    |    5 | Motorola |     104 |
                    |    6 | MI       |     105 |
                    +------+----------+---------+

           4th Step :- DELETE Record from Table 1 (PARENT TABLE) --
                   UPDATE FROM customer
                   where cust_id = 5;
                   Error Show :- means Iss Method ke through PARENT TABLE ke Data ko DELETE nhi kiya ja skta hai

                   Iss Case me pehle CHILD TABLE se Record ko delete karna hoga tab jaa kar PARENT TABLE se Record ko Delete kar skte hai

                   1st Step :- pehle CHILD TABLE se Record delete karna hoga, iss type se delete hoga
                          update from cancellation;
                          where t_id = 1;

                          update from cancellation;
                          where t_id = 2;

                        # Ab PRARENT TABLE se 1 NO ka Record DELETE kar skte hai
                          updat from customer;
                          where cust_id = 101;
                            +---------+-----------+----------+
                            | cust_id | cust_name | cust_add |
                            +---------+-----------+----------+
                            |     102 | Vidhi     | Delhi    |
                            |     103 | Vipin     | Bihar    |
                            |     104 | Akshara   | Lucknow  |
                            |     105 | Surbhi    | Delhi    |
                            |     106 | Ankita    | Kanpur   |
                            |     501 | Abhishek  | Himachal |
                            +---------+-----------+----------+











                                                SQL (STRUCTURE QUERY LANGAUGE) DATABASE

1) What is DATABASE in MySQL Server?
Ans)



Now i want to see details of Data Definition Langauge than write  HELP DATA DEFINITION and enter
                HELP DATA DEFINITION LANGUAGE
                topics:
                   ALTER :-
                          ALTER DATABASE
                          ALTER EVENT
                          ALTER FUNCTION
                          ALTER INSTANCE
                          ALTER LOGFILE GROUP
                          ALTER PROCEDURE
                          ALTER SCHEMA
                          ALTER SERVER
                          ALTER TABLE
                          ALTER TABLESPACE
                          ALTER VIEW
                   CREATE :-
                          CREATE DATABASE
                          CREATE EVENT
                          CREATE FUNCTION
                          CREATE INDEX
                          CREATE LOGFILE GROUP
                          CREATE PROCEDURE
                          CREATE SCHEMA
                          CREATE SERVER
                          CREATE SPATIAL REFERENCE SYSTEM
                          CREATE TABLE
                          CREATE TABLESPACE
                          CREATE TRIGGER
                          CREATE VIEW
                          CREATE FUNCTION UDF
                          CREATE RESOURCE GROUP
                          CREATE ROLE
                          CREATE USER
                          SHOW :-
                                SHOW CREATE DATABASE
                                SHOW CREATE EVENT
                                SHOW CREATE FUNCTION
                                SHOW CREATE PROCEDURE
                                SHOW CREATE SCHEMA
                                SHOW CREATE TABLE
                                SHOW CREATE USER
                          SPATIAL INDEXES
                   DROP :-
                          DROP DATABASE
                          DROP EVENT
                          DROP FUNCTION
                          DROP INDEX
                          DROP PROCEDURE
                          DROP SCHEMA
                          DROP SERVER
                          DROP SPATIAL REFERENCE SYSTEM
                          DROP TABLE
                          DROP TABLESPACE
                          DROP TRIGGER
                          DROP VIEW
                          DEALLOCATE PREPARE
                          DROP FUNCTION UDF
                          DROP RESOURCE GROUP
                          DROP USER
                          DROP PREPARE
                   FOREIGN KEY
                   RENAME TABLE
                   TRUNCATE TABLE





2) What is ALTER?
Ans) ALTER is an Data Definition langg


        1st) ALTER DATABASE :- Alter Database is enebles to you to change overall characteristic of database.
                                These characteristic are stored in the db.opt file in the database directory.
                                 tO USE Alter Database you need Alter privilege on the database

               Syntax :-
                        ALTER DATABASE database_name;

        1st) ADD COLUMN :- When a new col is to be added to the table structure without constraint it means, add method ka use karke ham pehle se bane hua table me new column ko add kar skta hai
                        alter table demo1
                        add column emp_cell varchar (50);

                        select * from demo1;
                        +--------+--------------+----------+----------+
                        | emp_id | emp_name     | emp_dept | emp_cell |
                        +--------+--------------+----------+----------+
                        |    101 | abhishek     | lucknow  | NULL     |
                        |    102 | sagun        | lucknow  | NULL     |
                        |    103 | sanskriti    | lucknow  | NULL     |
                        |    104 | rudransh     | lucknow  | NULL     |
                        |    105 | anoop        | lucknow  | NULL     |
                        |    106 | vivek        | lucknow  | NULL     |
                        |    107 | rukmani devi | lucknow  | NULL     |
                        |    108 | pooja devi   | lucknow  | NULL     |
                        |    109 | pawank kumar | lucknow  | NULL     |
                        |    110 | kusheshwar   | lucknow  | NULL     |
                        +--------+--------------+----------+----------+


        2nd) ADD MULTIPLE COLUMN without constraint :- adding multiple column in table without constraint
                        alter table demo_cls
                        add column emp_cell varchar (50),
                        add column emp_occ varchar (50),
                        add column emp_email text;

                        select * from demo_cls;
                        +--------+-----------+----------+----------+---------+-----------+
                        | emp_id | emp_name  | emp_city | emp_cell | emp_occ | emp_email |
                        +--------+-----------+----------+----------+---------+-----------+
                        |      1 | abhishek  | lucknow  | NULL     | NULL    | NULL      |
                        |      2 | sagun     | lucknow  | NULL     | NULL    | NULL      |
                        |      3 | sanskriti | lucknow  | NULL     | NULL    | NULL      |
                        |      4 | rudransh  | lucknow  | NULL     | NULL    | NULL      |
                        +--------+-----------+----------+----------+---------+-----------+


        3rd) ADD COLUMN SPECIFIED LOCATION :- when we add new column in existing table to col add hota table ke last place me..
                                        ALTER TABLE for ADDING by POSITION/Specific Location than we used these methods..

             Case 1) FIRST KEYWORD :-

                  Ex 1:-
                        alter table demo_cls
                        add column emp_NUM INT (50) FIRST;

                        SELECT * FROM demo_cls;
                        +---------+--------+-----------+----------+----------+---------+-----------+
                        | emp_NUM | emp_id | emp_name  | emp_city | emp_cell | emp_occ | emp_email |
                        +---------+--------+-----------+----------+----------+---------+-----------+
                        |    NULL |      1 | abhishek  | lucknow  | NULL     | NULL    | NULL      |
                        |    NULL |      2 | sagun     | lucknow  | NULL     | NULL    | NULL      |
                        |    NULL |      3 | sanskriti | lucknow  | NULL     | NULL    | NULL      |
                        |    NULL |      4 | rudransh  | lucknow  | NULL     | NULL    | NULL      |
                        +---------+--------+-----------+----------+----------+---------+-----------+



             Case 2) AFTER KEYWORD :-

                  Ex 1:-
                        alter table demo_cls
                        add column emp_address INT (50) AFTER emp_name;

                        SELECT * FROM demo_cls;
                        +---------+--------+-----------+-------------+----------+----------+---------+-----------+
                        | emp_NUM | emp_id | emp_name  | emp_address | emp_city | emp_cell | emp_occ | emp_email |
                        +---------+--------+-----------+-------------+----------+----------+---------+-----------+
                        |    NULL |      1 | abhishek  |        NULL | lucknow  | NULL     | NULL    | NULL      |
                        |    NULL |      2 | sagun     |        NULL | lucknow  | NULL     | NULL    | NULL      |
                        |    NULL |      3 | sanskriti |        NULL | lucknow  | NULL     | NULL    | NULL      |
                        |    NULL |      4 | rudransh  |        NULL | lucknow  | NULL     | NULL    | NULL      |
                        +---------+--------+-----------+-------------+----------+----------+---------+-----------+



        3nd) ADDING COLUMN with constraint :-

                Ex 1:-
                    Step 1st :-Create Table
                        create table family
                        (
                        Fname varchar (50) NOT NULL
                        );

                    Step 2nd :- Insert value

                        insert into family
                        values('Pawan Kumar'),
                        ('Rukmani Devi'),
                        ('Vivek Kumar'),
                        ('Pooja Devi'),
                        ('Abhishek Kumar'),
                        ('Anoop Kumar'),
                        ('Sagun Kumari'),
                        ('Sanskriti Kumari'),
                        ('Rudhransh Kumar');

                        select * from family;
                        +------------------+
                        | Fname            |
                        +------------------+
                        | Pawan Kumar      |
                        | Rukmani Devi     |
                        | Vivek Kumar      |
                        | Pooja Devi       |
                        | Abhishek Kumar   |
                        | Anoop Kumar      |
                        | Sagun Kumari     |
                        | Sanskriti Kumari |
                        | Rudhransh Kumar  |
                        +------------------+


                    Step 3th :-ALTER TABLE

                        alter table family
                        add column f_id int not null auto_increment primary key FIRST  # yaha par agr AUTO_INCREMENT nhi lete to P.K ke karn f_id me 0,0,0 hi aata kyo ki Not Null hi lena hoga P.K ke concept me.. P.K ki ek aur proparty ye hai ki P.K duplicate value  ko accept nhi karta hai,
                        add column Lname varchar (50) not null After Fname,   # P.K ke sath NOT NULL lena jaruri hai
                        add column F_cell varchar (50) not null;
                        select * from family;
                        +------+------------------+-------+--------+
                        | f_id | Fname            | Lname | F_cell |
                        +------+------------------+-------+--------+
                        |    1 | Pawan Kumar      |       |        |
                        |    2 | Rukmani Devi     |       |        |
                        |    3 | Vivek Kumar      |       |        |
                        |    4 | Pooja Devi       |       |        |
                        |    5 | Abhishek Kumar   |       |        |
                        |    6 | Anoop Kumar      |       |        |
                        |    7 | Sagun Kumari     |       |        |
                        |    8 | Sanskriti Kumari |       |        |
                        |    9 | Rudhransh Kumar  |       |        |
                        +------+------------------+-------+--------+




        4th) ALTER TABLE for Adding Constraint in Column SQL :- Mtlb kissi bane hua table me kuch constraint add karna

                Ex :- desc fm; # iss table me abhi koi abhi key nhi ab kese insert kiya jaye, iss par kaam  karna hai isme
                        +--------+-------------+------+-----+---------+-------+
                        | Field  | Type        | Null | Key | Default | Extra |
                        +--------+-------------+------+-----+---------+-------+
                        | F_ID   | int         | YES  |     | NULL    |       |
                        | F_name | varchar(50) | YES  |     | NULL    |       |
                        +--------+-------------+------+-----+---------+-------+


                Ans) :-
                        alter table fm
                        add constraint unique key (F_ID);   # iss method ke through ham bane hue table me Kisi bhi Constraint ko add kar skte hai

                        mysql> desc fm;    # yaha par ab ek Key add ho chuka hai Unique Key
                        +--------+-------------+------+-----+---------+-------+
                        | Field  | Type        | Null | Key | Default | Extra |
                        +--------+-------------+------+-----+---------+-------+
                        | F_ID   | int         | YES  | UNI | NULL    |       |
                        | F_name | varchar(50) | YES  |     | NULL    |       |
                        +--------+-------------+------+-----+---------+-------+



        5th) Change Column Name and Its Data Type WIthout Constraints in SQL:-  how to change col_name and create new  column

                # iss method ka use karke ham kisi table ke kisi column ko update ya delete kar ke new column create karna
                     jab ham kisi table ke kisi column ko update karte hai tab usme sirf column_name hi update nhi hota hai balki
                     column_name ke sath varchar and size bhi change karna hota hai agar varchar and size change nhi kiya to
                     error display ho jata hai,
                     iss liye column_name ke sath uss column ki proprty bhi change karni hoti hai

                Chage Column:- This is used to change name and data type of an existing column without Column.
                                Yaha par F_name ko change karna hai hmko
                        +--------+-------------+------+-----+---------+-------+
                        | Field  | Type        | Null | Key | Default | Extra |
                        +--------+-------------+------+-----+---------+-------+
                        | F_ID   | int         | YES  | UNI | NULL    |       |
                        | F_name | varchar(50) | YES  |     | NULL    |       |
                        +--------+-------------+------+-----+---------+-------+


                Syntax:- ALTER TABLE table_name
                CHANGE COLUMN old_column_name  new_column_name  new_data_type  (size)

                        Ex :-
                        alter table fm
                        change column F_Name Name varchar (50);

                        desc fm;  # Yaha par F_name change ho kar Name me ho gya hai
                        +-------+-------------+------+-----+---------+-------+
                        | Field | Type        | Null | Key | Default | Extra |
                        +-------+-------------+------+-----+---------+-------+
                        | F_ID  | int         | YES  | UNI | NULL    |       |
                        | Name  | varchar(50) | YES  |     | NULL    |       |
                        +-------+-------------+------+-----+---------+-------+


        6th) Change more than one column Name and its data type without constraints in SQL :-

                # Iss method ke through ham multiple column_name ko change kar sakte hai

                        +-------+-------------+------+-----+---------+-------+
                        | Field | Type        | Null | Key | Default | Extra |
                        +-------+-------------+------+-----+---------+-------+
                        | F_ID  | int         | YES  | UNI | NULL    |       |
                        | Name  | varchar(50) | YES  |     | NULL    |       |
                        +-------+-------------+------+-----+---------+-------+


                Syntan:-
                    ALTER TABLE table_name
                    CHANGE COLUMN old_column1_name  new_column1_name  new_data_type  (size),
                    CHANGE COLUMN old_column2_name  new_column2_name  new_data_type  (size);

                Ex :- Iss method me Key nhi change hota hai sirf column_name and uski property like DT and SIZE
                        alter table fm
                        change column F_ID id int (50),
                        change column Name name varchar (50);

                        desc fm;
                        +-------+-------------+------+-----+---------+-------+
                        | Field | Type        | Null | Key | Default | Extra |
                        +-------+-------------+------+-----+---------+-------+
                        | id    | int         | YES  | UNI | NULL    |       |
                        | name  | varchar(50) | YES  |     | NULL    |       |
                        +-------+-------------+------+-----+---------+-------+


        7th) CHANGE COLUMN name and its Data Type with constraint in SQL:-

             # Iss method ke through ham column_name and uski property ke sath Constraint ko bhi change kiya jata hai

                        +-------+-------------+------+-----+---------+-------+
                        | Field | Type        | Null | Key | Default | Extra |
                        +-------+-------------+------+-----+---------+-------+
                        | F_ID  | int         | YES  | UNI | NULL    |       |
                        | Name  | varchar(50) | YES  |     | NULL    |       |
                        +-------+-------------+------+-----+---------+-------+

                Syntan:-
                    ALTER TABLE table_name
                    CHANGE COLUMN old_column1_name  new_column1_name  new_data_type  (size) Constraint_Name,
                    CHANGE COLUMN old_column2_name  new_column2_name  new_data_type  (size),
                    ADD Constriant_name (column_name);


                Ex :-
                        alter table fm
                        change column id emp_id int (50) not null,
                        change column name emp_name varchar (50),
                        add primary key (emp_id);

                        desc fm;
                        +----------+-------------+------+-----+---------+-------+
                        | Field    | Type        | Null | Key | Default | Extra |
                        +----------+-------------+------+-----+---------+-------+
                        | emp_id   | int         | NO   | PRI | NULL    |       |
                        | emp_name | varchar(50) | YES  |     | NULL    |       |
                        +----------+-------------+------+-----+---------+-------+



        8th) Modify Table :- This is used to modify the size of the datatype or datatype itself an existing column without
                                change column name..

             MODIFY COLUMN Data Type and Its Size with or Without Constraint in SQL

                        +----------+-------------+------+-----+---------+-------+
                        | Field    | Type        | Null | Key | Default | Extra |
                        +----------+-------------+------+-----+---------+-------+
                        | emp_id   | int         | NO   | PRI | NULL    |       |
                        | emp_name | varchar(50) | YES  |     | NULL    |       |
                        +----------+-------------+------+-----+---------+-------+


             Syntax :- ALTER TABLE table_name
                       MODIFY COLUMN column_name datatype (size)

                Ex 1:- Without change Constraint :-
                        ALTER TABLE fm
                        MODIFY COLUMN emp_name char (20);

                        desc fm; yaha par varchar ki jagah par char ho gya hai sath hi me size bhi change ho gya hai, yaha par
                                 constraint change nhi ho rha hai , kyoki NULL wale column me YES likha hai
                        +----------+----------+------+-----+---------+-------+
                        | Field    | Type     | Null | Key | Default | Extra |
                        +----------+----------+------+-----+---------+-------+
                        | emp_id   | int      | NO   | PRI | NULL    |       |
                        | emp_name | char(20) | YES  |     | NULL    |       |
                        +----------+----------+------+-----+---------+-------+


                Ex 2:- With change Constraint :-
                        ALTER TABLE fm
                        MODIFY COLUMN emp_name char (20) NOT NULL;

                        DESC fm; yaha par NOT NULL value import ho gya hai NULL wale column me jaha par NO likha hua hai column me
                        +----------+----------+------+-----+---------+-------+
                        | Field    | Type     | Null | Key | Default | Extra |
                        +----------+----------+------+-----+---------+-------+
                        | emp_id   | int      | NO   | PRI | NULL    |       |
                        | emp_name | char(20) | NO   |     | NULL    |       |
                        +----------+----------+------+-----+---------+-------+


        9th) DROP COLUMN :-
           1 :- when a column in a table need to delete than we used that thos method that is drop with alter method

             Syntax :- ALTER TABLE table_name
                       DROP COLUMN column_name;


                Ex :-
                        ALTER TABLE fm
                        DROP COLUMN emp_id;

                        desc fm;   Yaha par column delete ho rha hai emp_id name ka column delete ho chuka hai that is drop with alter
                                   yaha par kuch RDBMS DROP COLUMN METHOD ko support nhi karta hai iss liye better yhi hota hai
                                    ki TABLE CREATE karte time COLUMN_NAME parfact hona chahiye, jis column ki jarurat hai ussi ko
                                    create karna chahiye
                        +----------+----------+------+-----+---------+-------+
                        | Field    | Type     | Null | Key | Default | Extra |
                        +----------+----------+------+-----+---------+-------+
                        | emp_name | char(20) | NO   |     | NULL    |       |
                        +----------+----------+------+-----+---------+-------+


           2 :- Agar Constraint ko Remove karan ho tab kese karenge
                When Removing CONSTRAINT_NAME FROM COLUMN than we used this method

                        +----------+----------+------+-----+---------+----------------+
                        | Field    | Type     | Null | Key | Default | Extra          |
                        +----------+----------+------+-----+---------+----------------+
                        | emp_id   | int      | NO   | UNI | NULL    | auto_increment |
                        | emp_name | char(20) | NO   |     | NULL    |                |
                        +----------+----------+------+-----+---------+----------------+

             Syntax :- ALTER TABLE table_name
                       DROP CONSTRAINT_NAME column_name;

                Ex:- yaha par Primary key ko ham delete nhi kar skte hai
                     but unique key ko delete kiya ja skta hai yaha par for example

                 1st Step ):-   show index from fm;;
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | Visible | Expression |
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+
| fm    |          0 | PRIMARY  |            1 | emp_id      | A         |           0 |     NULL |   NULL |      | BTREE      |         |               | YES     | NULL       |
+-------+------------+----------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+---------+------------+

                 2nd Step ):- alter table fm
                              drop index (emp_id)   # yaha par Unique key delete ho gya hai
                        +----------+----------+------+-----+---------+----------------+
                        | Field    | Type     | Null | Key | Default | Extra          |
                        +----------+----------+------+-----+---------+----------------+
                        | emp_id   | int      | NO   |     | NULL    | auto_increment |
                        | emp_name | char(20) | NO   |     | NULL    |                |
                        +----------+----------+------+-----+---------+----------------+










2) What is DROP?
Ans) Drop

    1st) DROP Database:-
            Syntax :- DROP DATABASE database_name;


    2nd) Drop Table:-
            Syntax :- DROP Table table_name;


3) What is Truncate
Ans) When we only want delete the data inside the table and not table itself delete than we useed this method..
          Jab hamko table me se keval data ko delete karna hota hai tab ham trancate ka use karte hai kyoki truncate
          keval data ko delete karta hai table me se, but Table delete nhi hota hai

          While Drop Pure table ko hi delete kar deta hai database se

          Syntax:- truncate table table_name;



                Ex :-
                    1st Step :-
                                use python_details;
                                Database changed
                    2nd Step :-
                                select * from artifiq_emp;
                        +--------+---------------+-----------------+-------------+------------+-------------+
                        | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
                        +--------+---------------+-----------------+-------------+------------+-------------+
                        |      1 | abhshek kumar | python-django   | 2020-07-22  | 9415058209 | Lucknow     |
                        |      2 | vidhir        | python-srapping | 2020-07-22  | 9650570534 | Delhi       |
                        |      3 | vipin         | python-srapping | 2020-07-22  | 7838507122 | Delhi       |
                        |      4 | srishti       | HR-IT           | 2018-11-13  | 9069001580 | Gurugram    |
                        |      5 | mahima        | HR-IT           | 2016-02-13  | 8279836664 | Jaipur      |
                        |      6 | manish        | python-srapping | 2019-09-13  | 7054537423 | Agar        |
                        |      7 | himanshu      | HR-IT           | 2017-05-13  | 9050508960 | Jaipur      |
                        |      8 | shweta ghosh  | HR-IT           | 2018-02-13  | 7838000390 | Kolkata     |
                        +--------+---------------+-----------------+-------------+------------+-------------+
                    3rd Step :-
                         truncate table artifiq_emp;

                        +--------+---------------+-----------------+-------------+------------+-------------+
                        | emp_id | emp_name      | emp_dept        | emp_joining | emp_cell   | emp_address |
                        +--------+---------------+-----------------+-------------+------------+-------------+
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        |        |               |                 |             |            |             |
                        +--------+---------------+-----------------+-------------+------------+-------------+





4) What is Rename?
Ans) This command is used to RENAME one or more table, when i want to rename existing table than we used that method

        Syntax :-
                RENAME TABLE old_table_name to new_table_name;

                Ex :-
                    1st Step :-
                             select * from demo1;  # Old table name
                        +--------+--------------+----------+----------+
                        | emp_id | emp_name     | emp_dept | emp_cell |
                        +--------+--------------+----------+----------+
                        |    101 | abhishek     | lucknow  | NULL     |
                        |    102 | sagun        | lucknow  | NULL     |
                        |    103 | sanskriti    | lucknow  | NULL     |
                        |    104 | rudransh     | lucknow  | NULL     |
                        |    105 | anoop        | lucknow  | NULL     |
                        |    106 | vivek        | lucknow  | NULL     |
                        |    107 | rukmani devi | lucknow  | NULL     |
                        |    108 | pooja devi   | lucknow  | NULL     |
                        |    109 | pawank kumar | lucknow  | NULL     |
                        |    110 | kusheshwar   | lucknow  | NULL     |
                        +--------+--------------+----------+----------+

                    2nd Step :-
                        RENAME TABLE demo1 to my_family;


                                select * from my_family;
                        +--------+--------------+----------+----------+
                        | emp_id | emp_name     | emp_dept | emp_cell |
                        +--------+--------------+----------+----------+
                        |    101 | abhishek     | lucknow  | NULL     |
                        |    102 | sagun        | lucknow  | NULL     |
                        |    103 | sanskriti    | lucknow  | NULL     |
                        |    104 | rudransh     | lucknow  | NULL     |
                        |    105 | anoop        | lucknow  | NULL     |
                        |    106 | vivek        | lucknow  | NULL     |
                        |    107 | rukmani devi | lucknow  | NULL     |
                        |    108 | pooja devi   | lucknow  | NULL     |
                        |    109 | pawank kumar | lucknow  | NULL     |
                        |    110 | kusheshwar   | lucknow  | NULL     |
                        +--------+--------------+----------+----------+




5) What is SHOW COMMAND ?
Ans)
        DESC are usedd many platform like

        1) SHOW column;- It SHOW all Column of Table their datatype along with any other column specify details.
                When we want to display Column details than we used this keywords

                Syntax :-
                        SHOW COLUMNS from table_name;

                Ex:-
                      show columns from my_family;
                       +----------+-------------+------+-----+---------+----------------+
                       | Field    | Type        | Null | Key | Default | Extra          |
                       +----------+-------------+------+-----+---------+----------------+
                       | emp_id   | int         | NO   | PRI | NULL    | auto_increment |
                       | emp_name | varchar(50) | YES  |     | NULL    |                |
                       | emp_dept | varchar(50) | YES  |     | NULL    |                |
                       | emp_cell | varchar(50) | YES  |     | NULL    |                |
                       +----------+-------------+------+-----+---------+----------------+



        2) SHOW CREATE DATABASE :- It SHOW all DATABASE, while creating database.

                Syntax :-
                        SHOW CREATE DATABASE database_name;

                Ex:-
                 SHOW Create DATABASE demo; # yaha par 'demo' single qoutes me aa rha hai jab ki hmne create karte time qoutes
                                              nhi diye..
+----------+--------------------------------------------------------------------------------------------------------------------------------+
| Database | Create Database                                                                                                                |
+----------+--------------------------------------------------------------------------------------------------------------------------------+
| demo     | CREATE DATABASE `demo` /*!40100 DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_0900_ai_ci */ /*!80016 DEFAULT ENCRYPTION='N' */ |
+----------+--------------------------------------------------------------------------------------------------------------------------------+




        3) SHOW CREATE TABLE :- It SHOW all Table, while creating your table.

                  Syntax :- Iss ka benefit tab milta hai jab hamko koi new table create karna hota hai tab baar baar
                              code nhi likhna parta hai direct SHOW TABLE command ka use kar ke Code ko Copy kar lete hai

                            SHOW CREATE TABLE table_name;

                  Ex:-
                        SHOW CREATE TABLE my_family;
                      +-----------+----------------------------------------------------------------------------------------+
                      | Table     | Create Table                                                                           |
                      +-----------+----------------------------------------------------------------------------------------+
                      | my_family | CREATE TABLE `my_family` (                                                             |                                                                                                    |
                      | `emp_id`    int NOT NULL AUTO_INCREMENT,                                                           |                                                                                               |
                      | `emp_name`   varchar(50) DEFAULT NULL,                                                             |
                      | `emp_dept`   varchar(50) DEFAULT NULL,                                                             |
                      | `emp_cell`   varchar(50) DEFAULT NULL,                                                             |
                      | PRIMARY KEY    (`emp_id`)                                                                          |
                      | ) ENGINE=InnoDB AUTO_INCREMENT=111 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci              |
                      +-----------+----------------------------------------------------------------------------------------+






























                                            KEYS IN MySQL




1) What is FOREIGN KEY?
Ans) Foreign key is used to connect 2 table

            1st Step :- create table 1
               create table customer
               (
               cust_id int auto_increment primary key,
               cust_name varchar (50),
               cust_cell varchar (50),
               cust_add text
               );




           2nd Step :- Insert Data
               insert into customer
               values (101,'Harish','9891901121','Himachal'),
               (102,'Ankit','94774544','Delhi'),
               (103,'Roshan','245752878','Bihar'),
               (104,'Abhshek','9415058209','Lucknow'),
               (105,'Kalindi','945774','Delhi'),
               (106,'Sagufta','7545','Kanpur');




          3rd Step :- Show data
              select * from customer;
                 +---------+-----------+------------+----------+
                 | cust_id | cust_name | cust_cell  | cust_add |
                 +---------+-----------+------------+----------+
                 |     101 | Harish    | 9891901121 | Himachal |
                 |     102 | Ankit     | 94774544   | Delhi    |
                 |     103 | Roshan    | 245752878  | Bihar    |
                 |     104 | Abhshek   | 9415058209 | Lucknow  |
                 |     105 | Kalindi   | 945774     | Delhi    |
                 |     106 | Sagufta   | 7545       | Kanpur   |
                 +---------+-----------+------------+----------+




         4th Step :- Create Table 2 for FOREIGN KEY

             A) 1st Type
              create table product
              (
              pro_id int (20) Not Null auto_increment Primary Key,
              pro_name varchar (50) Not Null,
              cust_id int (50),
              foreign key(cust_id) references customer(cust_id)    #Iss type se create kiye gye foreign key table me se ham kabhi bhi FOREIGN KEY ko delete nhi kar skte hai, to agr ham Foreign key ko delete kar na ho tab kese karenge dekhte ham 2nd type ke table creation me
              );

             B) 2nd Type
              create table product
              (
              pro_id int (20) Not Null auto_increment Primary Key,
              pro_name varchar (50) Not Null,
              cust_id int (50),
              CONSTRAINT customer_cid_fk
              foreign key(cust_id) references customer(cust_id)
              );




        5th Step :- Check Table Created or not
              desc product;
              +----------+-------------+------+-----+---------+----------------+
              | Field    | Type        | Null | Key | Default | Extra          |
              +----------+-------------+------+-----+---------+----------------+
              | pro_id   | int         | NO   | PRI | NULL    | auto_increment |
              | pro_name | varchar(50) | NO   |     | NULL    |                |
              | cust_id  | int         | YES  | MUL | NULL    |                |
              +----------+-------------+------+-----+---------+----------------+




        6th Step :- Insert Data in Foreign key table





        7th Step :- How to find Constraint Name in SQL  #Constraint name ka mtlb jo hamne foreign key table me constraint name likha tha
                                                              uss name ki baat yaha ho rhi hai like 'CONSTRAINT customer_cid_fk' isko kese find
                                                              karenge yahi dekhne wale hai ham yahha par

                select * from information_schema.table_constraints
                where table_name = 'product';
                +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+
                | CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME | TABLE_SCHEMA | TABLE_NAME | CONSTRAINT_TYPE | ENFORCED |
                +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+
                | def                | demo              | PRIMARY         | demo         | product    | PRIMARY KEY     | YES      |
                | def                | flipkart          | PRIMARY         | flipkart     | product    | PRIMARY KEY     | YES      |
                | def                | flipkart          | customer_cid_fk | flipkart     | product    | FOREIGN KEY     | YES      |
                +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+




       8th Step :- How to delete FOREIGN KEY from Table?
         Ans) Syntax :- ALTER TABLE table_name
                        DROP FOREIGN KEY CONSTRAINT_NAME;

              Ex:-
                 1st Point :-
                    ALTER TABLE product
                    DROP FOREIGN KEY customer_cid_fk;

                 2nd Point :- Show Table Information
                    select * from information_schema.table_constraints  # yaha se Foreign key delete ho chuka hai
                    where table_name = 'product';
                   +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+
                   | CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME | TABLE_SCHEMA | TABLE_NAME | CONSTRAINT_TYPE | ENFORCED |
                   +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+
                   | def                | demo              | PRIMARY         | demo         | product    | PRIMARY KEY     | YES      |
                   | def                | flipkart          | PRIMARY         | flipkart     | product    | PRIMARY KEY     | YES      |
                   +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+





       9th Step :-Add Foreign Key Constraint in a Table SQL :- Pehle se bane hua table me kese FOREIGN KEY ko create kar skte hai,
                                                               FOREIGN KEY ko createkarne ke liye iss Function ka use krta hai
         Syntax:-
             ALTER TABLE table_name
             ADD CONSTRAINT CONSTRAINT_NAME
             FOREIGN KEY(col_name) references customer(col_name)

           Ex:-
              1st Step :-
                create table product_sell
                (
                pro_id int (20) Not Null auto_increment Primary Key,
                pro_name varchar (50) Not Null,
                ord_id int (50)
                );

              2nd Step :-
                alter table product_sell
                add constraint ord_id_fk
                FOREIGN KEY(ord_id) REFERENCES order_emp(ord_id);

              3rd Step :-
                select * from information_schema.table_constraints
                where table_name = 'product_sell';
                +--------------------+-------------------+-----------------+--------------+--------------+-----------------+----------+
                | CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME | TABLE_SCHEMA | TABLE_NAME   | CONSTRAINT_TYPE | ENFORCED |
                +--------------------+-------------------+-----------------+--------------+--------------+-----------------+----------+
                | def                | demo              | PRIMARY         | demo         | product_sell | PRIMARY KEY     | YES      |
                | def                | demo              | ord_id_fk       | demo         | product_sell | FOREIGN KEY     | YES      |
                +--------------------+-------------------+-----------------+--------------+--------------+-----------------+----------+

              4th Step :-
                desc product_sell;
                +----------+-------------+------+-----+---------+----------------+
                | Field    | Type        | Null | Key | Default | Extra          |
                +----------+-------------+------+-----+---------+----------------+
                | pro_id   | int         | NO   | PRI | NULL    | auto_increment |
                | pro_name | varchar(50) | NO   |     | NULL    |                |
                | ord_id   | int         | YES  | MUL | NULL    |                |
                +----------+-------------+------+-----+---------+----------------+


              5th Step :- Insert Data :-




       10th Step :- Jab table create karne ke baad me FOREIGN KEY and wo column jissi FOREIGN KEY ko bana hai wo create karna ho tab kese karenge
                        wo dekhte hai yaha

              1st Step :-
                create table company
                (
                com_id int Not Null auto_increment Primary Key,
                com_name varchar (50) Not Null
                );

              2nd Step :-
                ALTER TABLE company
                ADD COLUMN pro_id INT (50) NOT NULL,
                ADD CONSTRAINT product_id_fk
                FOREIGN KEY(pro_id) REFERENCES product_sell(ord_id);

              3rd Step :-
                select * from information_schema.table_constraints
                where table_name = 'company';
                +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+
                | CONSTRAINT_CATALOG | CONSTRAINT_SCHEMA | CONSTRAINT_NAME | TABLE_SCHEMA | TABLE_NAME | CONSTRAINT_TYPE | ENFORCED |
                +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+
                | def                | demo              | PRIMARY         | demo         | company    | PRIMARY KEY     | YES      |
                | def                | demo              | product_id_fk   | demo         | company    | FOREIGN KEY     | YES      |
                +--------------------+-------------------+-----------------+--------------+------------+-----------------+----------+





2) What is Composite Key ?In database design, a composite key is a candidate key that consists of
Ans) two or more attributes (table columns) that together uniquely identify an entity occurrence (table row).
     A compound key is a composite key for which each attribute that makes up the key is a simple (foreign) key in its own right.

            1st Step :- Create Table

                create table composite
                (
                tech_code varchar (50),
                Date date,
                tech_name varchar (50),
                seat int (50),
                remain int (50),
                room int (50),
                rcapacity int (50),
                primary key (tech_code, date)

                );


                desc composite;
                +-----------+-------------+------+-----+---------+-------+
                | Field     | Type        | Null | Key | Default | Extra |
                +-----------+-------------+------+-----+---------+-------+
                | tech_code | varchar(50) | NO   | PRI | NULL    |       |
                | Date      | date        | NO   | PRI | NULL    |       |
                | tech_name | varchar(50) | YES  |     | NULL    |       |
                | seat      | int         | YES  |     | NULL    |       |
                | remain    | int         | YES  |     | NULL    |       |
                | room      | int         | YES  |     | NULL    |       |
                | rcapacity | int         | YES  |     | NULL    |       |
                +-----------+-------------+------+-----+---------+-------+




            2nd Step :- Insert Data Into Table
                insert into composite
                values('DJ 3.0',DATE('2020-10-18'),'Django',25,15,101,50),
                ('JS 4.0',DATE('2018-07-12'),'Java Script',10,19,102,15),
                ('Angular 2.0',DATE('2016-03-06'),'Angular JS',13,23,103,20),
                ('ML 2.3',DATE('2015-11-07'),'Machine Learning',35,28,104,45);

                SELECT * FROM composite;
                +-------------+------------+------------------+------+--------+------+-----------+
                | tech_code   | Date       | tech_name        | seat | remain | room | rcapacity |
                +-------------+------------+------------------+------+--------+------+-----------+
                | Angular 2.0 | 2016-03-06 | Angular JS       |   13 |     23 |  103 |        20 |
                | DJ 3.0      | 2020-10-18 | Django           |   25 |     15 |  101 |        50 |
                | JS 4.0      | 2018-07-12 | Java Script      |   10 |     19 |  102 |        15 |
                | ML 2.3      | 2015-11-07 | Machine Learning |   35 |     28 |  104 |        45 |
                +-------------+------------+------------------+------+--------+------+-----------+































                                                          JOINS




1) What is CROSS JOINS
Ans) Cross Join ka Use Hma nhi karte hai kyoki tables me agar bahut sare Record hua to hamara SYSTEM Crash ho jayega iss liye nhi use hota hai

                       select * from customer;
                       +---------+-----------+----------+
                       | cust_id | cust_name | cust_add |
                       +---------+-----------+----------+
                       |     101 | Abhishek  | Himachal |
                       |     102 | Vidhi     | Delhi    |
                       |     103 | Vipin     | Bihar    |
                       +---------+-----------+----------+

                       select * from department;
                       +------+-----------------+---------+
                       | d_id | d_name          | cust_id |
                       +------+-----------------+---------+
                       |    1 | Django          |     101 |
                       |    2 | Machine Learing |     101 |
                       |    3 | Java Script     |     102 |
                       +------+-----------------+---------+


                   1st Method :- 1st Method for CROSS JOINS

                     select customer.cust_name, department.d_name from department, customer;
                       +-----------+-----------------+
                       | cust_name | d_name          |
                       +-----------+-----------------+
                       | Abhishek  | Django          |
                       | Abhishek  | Machine Learing |
                       | Abhishek  | Java Script     |
                       | Vidhi     | Django          |
                       | Vidhi     | Machine Learing |
                       | Vidhi     | Java Script     |
                       | Vipin     | Django          |
                       | Vipin     | Machine Learing |
                       | Vipin     | Java Script     |
                       +-----------+-----------------+

                   2nd Method :- 2nd Method for CROSS JOINS

                     select cust_name,d_name from customer,department;
                       +-----------+-----------------+
                       | cust_name | d_name          |
                       +-----------+-----------------+
                       | Abhishek  | Django          |
                       | Vidhi     | Django          |
                       | Vipin     | Django          |
                       | Abhishek  | Machine Learing |
                       | Vidhi     | Machine Learing |
                       | Vipin     | Machine Learing |
                       | Abhishek  | Java Script     |
                       | Vidhi     | Java Script     |
                       | Vipin     | Java Script     |
                       +-----------+-----------------+


                   3rd Method :- 3rd Method for CROSS JOINS

                     select * from customer cross join department;
                        +---------+-----------+----------+------+-----------------+---------+
                        | cust_id | cust_name | cust_add | d_id | d_name          | cust_id |
                        +---------+-----------+----------+------+-----------------+---------+
                        |     101 | Abhishek  | Himachal |    1 | Django          |     101 |
                        |     102 | Vidhi     | Delhi    |    1 | Django          |     101 |
                        |     103 | Vipin     | Bihar    |    1 | Django          |     101 |
                        |     101 | Abhishek  | Himachal |    2 | Machine Learing |     101 |
                        |     102 | Vidhi     | Delhi    |    2 | Machine Learing |     101 |
                        |     103 | Vipin     | Bihar    |    2 | Machine Learing |     101 |
                        |     101 | Abhishek  | Himachal |    3 | Java Script     |     102 |
                        |     102 | Vidhi     | Delhi    |    3 | Java Script     |     102 |
                        |     103 | Vipin     | Bihar    |    3 | Java Script     |     102 |
                        +---------+-----------+----------+------+-----------------+---------+


                   4th Method :-
                     select * from customer, department;

                        +---------+-----------+----------+------+-----------------+---------+
                        | cust_id | cust_name | cust_add | d_id | d_name          | cust_id |
                        +---------+-----------+----------+------+-----------------+---------+
                        |     101 | Abhishek  | Himachal |    1 | Django          |     101 |
                        |     102 | Vidhi     | Delhi    |    1 | Django          |     101 |
                        |     103 | Vipin     | Bihar    |    1 | Django          |     101 |
                        |     101 | Abhishek  | Himachal |    2 | Machine Learing |     101 |
                        |     102 | Vidhi     | Delhi    |    2 | Machine Learing |     101 |
                        |     103 | Vipin     | Bihar    |    2 | Machine Learing |     101 |
                        |     101 | Abhishek  | Himachal |    3 | Java Script     |     102 |
                        |     102 | Vidhi     | Delhi    |    3 | Java Script     |     102 |
                        |     103 | Vipin     | Bihar    |    3 | Java Script     |     102 |
                        +---------+-----------+----------+------+-----------------+---------+



2) What is INNER JOIN ?
Ans) An Inner Join is a Cross Join with some result rows remove by a condition in the query

     INNER JOIN are 3 type :-

          1) EQUI JOIN
          2) NON EQUI JOIN
          3) NATURAL JOIN



          1) EQUI JOIN :-
              1st Step :-
                SELECT * FROM customer;
                +---------+-----------+----------+
                | cust_id | cust_name | cust_add |
                +---------+-----------+----------+
                |     101 | Abhishek  | Himachal |
                |     102 | Vidhi     | Delhi    |
                |     103 | Vipin     | Bihar    |
                |     104 | Akshara   | Lucknow  |
                |     105 | Surbhi    | Delhi    |
                |     106 | Ankita    | Kanpur   |
                +---------+-----------+----------+

                SELECT * FROM department;
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | Django          |     101 |
                |    2 | Machine Learing |     101 |
                |    3 | Java Script     |     102 |
                |    4 | Angular JS      |     103 |
                |    5 | HR-Admin        |     104 |
                |    6 | HR-General      |     105 |
                +------+-----------------+---------+


              2nd Step :- Create Inner Joins
                A) Condition 1 :- Jab Costumer table ka use select statement me karenge tab output change ho jayega

                     select customer.cust_name, department.d_name from customer   # Inner joinka effer yaha ki wajah se hota hai,agr yaha par customer table ki jagah par department table ka name likh de tab mera data change ho jayega
                     INNER JOIN department
                     ON customer.cust_id = department.cust_id;
                     +-----------+-----------------+
                     | cust_name | d_name          |
                     +-----------+-----------------+
                     | Abhishek  | Django          |
                     | Abhishek  | Machine Learing |
                     | Vidhi     | Java Script     |
                     | Vipin     | Angular JS      |
                     +-----------+-----------------+

                B) Condition 2 :- Jab Department table ka use select statement me karenge tab output change ho jayega

                    select department.d_name, customer.cust_name from department
                    INNER JOIN customer
                    ON customer.cust_id = department.cust_id;
                    +-----------------+-----------+
                    | d_name          | cust_name |
                    +-----------------+-----------+
                    | Django          | Abhishek  |
                    | Machine Learing | Abhishek  |
                    | Java Script     | Vidhi     |
                    | Angular JS      | Vipin     |
                    +-----------------+-----------+





          2) NON EQUI JOIN :- That means Not Equal , iska symbal hai <> ye.. Iss case me Abhishek kiss dept me kaam nhi karta hai ye display
                               karega..
                               Isska Use tab karte hai jab hamse pucha jaye ki Abhishek or Vidhi or Vipin kaha kaam nhi karte hai

                SELECT * FROM customer;
                +---------+-----------+----------+
                | cust_id | cust_name | cust_add |
                +---------+-----------+----------+
                |     101 | Abhishek  | Himachal |
                |     102 | Vidhi     | Delhi    |
                |     103 | Vipin     | Bihar    |
                +---------+-----------+----------+

                SELECT * FROM department;
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | Django          |     101 |
                |    2 | Machine Learing |     101 |
                |    3 | Java Script     |     102 |
                |    4 | Angular JS      |     103 |
                |    5 | HR-Admin        |     104 |
                |    6 | HR-General      |     105 |
                +------+-----------------+---------+


                  A) Condition 1st :-
                    select department.d_name, customer.cust_name from department
                    INNER JOIN customer
                    ON customer.cust_id <> department.cust_id;

                    +-----------------+-----------+
                    | d_name          | cust_name |
                    +-----------------+-----------+
                    | Java Script     | Abhishek  |
                    | Angular JS      | Abhishek  |
                    | HR-Admin        | Abhishek  |
                    | HR-General      | Abhishek  |
                    | Django          | Vidhi     |
                    | Machine Learing | Vidhi     |
                    | Angular JS      | Vidhi     |
                    | HR-Admin        | Vidhi     |
                    | HR-General      | Vidhi     |
                    | Django          | Vipin     |
                    | Machine Learing | Vipin     |
                    | Java Script     | Vipin     |
                    | HR-Admin        | Vipin     |
                    | HR-General      | Vipin     |
                    +-----------------+-----------+




          3) NATURAL JOIN :- Iss Condition me Table1 ke P.K column ka name aur table2 ke F.K ka Columnn ka Name Soame hona chahiye
                             jesa ki dono Tables me hai (cust_id) dono me same hai
              Syntax :-
                select column_name from table1
                natural join table2;

              Cond) Show Original Table details :-
                Customer table or Table 1
                +---------+-----------+----------+
                | cust_id | cust_name | cust_add |
                +---------+-----------+----------+
                |     101 | Abhishek  | Himachal |
                |     102 | Vidhi     | Delhi    |
                |     103 | Vipin     | Bihar    |
                |     104 | Akshara   | Lucknow  |
                |     105 | Surbhi    | Delhi    |
                |     106 | Ankita    | Kanpur   |
                +---------+-----------+----------+

                Department table or Table 2
                +------+-----------------+---------+
                | d_id | d_name          | cust_id |
                +------+-----------------+---------+
                |    1 | Django          |     101 |
                |    2 | Machine Learing |     101 |
                |    3 | Java Script     |     102 |
                |    4 | Angular JS      |     103 |
                |    5 | HR-Admin        |     104 |
                |    6 | HR-General      |     105 |
                +------+-----------------+---------+


                    select department.d_name, customer.cust_name from department
                    natural join customer;
                    +-----------------+-----------+
                    | d_name          | cust_name |
                    +-----------------+-----------+
                    | Django          | Abhishek  |
                    | Machine Learing | Abhishek  |
                    | Java Script     | Vidhi     |
                    | Angular JS      | Vipin     |
                    | HR-Admin        | Akshara   |
                    | HR-General      | Surbhi    |
                    +-----------------+-----------+





3) What is OUTER JOIN ?
Ans) An Outer Join returns all Rows from One of the Table, along with Matching Information from another Table..

      Outer Join aree 3 type :-
          1) Left Outer Join / Left Join
          2) Right Outer Join / Right Join
          3) Full Outer Join / Full Join
          


          1) Left Outer Join / Left Join :- Left Join Keyword returns all row from Left Table, with the Matching Rows in
                                            Right Table.
                                            There is Return Null in the Right Side when there is no Match Rows
                                            Left Outer Join the Table that comes before the Join is the Left Table,and the Table that
                                            come after the Join is Right Table That is Left Outer Table..
                                            matlb jo Table Join Keyword se pehle likha jayega wo Table LEFT TABLE hoga, aur
                                            jo TABLE Join keyword ke baad likha jayega wo RIGHT TABLE hoga

                    LEFT JOIN ka benefit ye hota hai ki jo record table1 and table2 me match hoga wo display to hoga, but jo data match
                    nhi karega uss Column me NULL Value Set ho jayega  (Ex me Ankita ke column me NULL Value Default Set ho rha hai kyoki Ankita
                                                                          ke liye koi bhi Value Table2 me nhi defined kiya gya hai)
                    Jabki INNER JOIN me jo RECORD MATCH karega wahi Records display hota hai

                    INNER JOIN ka use karke hame ye to pata chal jayega ki kon  sa Employee kiss department se belongs
                    karta hai but ye nhipata chalega ki kon
                    sa Employee kissi bhi department se Belongs nhi karta hai
                    iss ke liye ham LEFT JOIN ka use karte hai ki hame pata chale ki kon sa Employee kissi bhi
                    Department se belong nhi karta hai


                Syntax:- SELECT table_name.col_name1,table_name.col_name2,... from Table1
                         LEFT JOIN table2
                         ON col_name = col_name;

                      select * from customer;    # tablel
                        +---------+-----------+----------+
                        | cust_id | cust_name | cust_add |
                        +---------+-----------+----------+
                        |     101 | Abhishek  | Himachal |
                        |     102 | Vidhi     | Delhi    |
                        |     103 | Vipin     | Bihar    |
                        |     104 | Akshara   | Lucknow  |
                        |     105 | Surbhi    | Delhi    |
                        |     106 | Ankita    | Kanpur   |
                        +---------+-----------+----------+


                      select * from department;    # table2
                        +------+-----------------+---------+
                        | d_id | d_name          | cust_id |
                        +------+-----------------+---------+
                        |    1 | Django          |     101 |
                        |    2 | Machine Learing |     101 |
                        |    3 | Java Script     |     102 |
                        |    4 | Angular JS      |     103 |
                        |    5 | HR-Admin        |     104 |
                        |    6 | HR-General      |     105 |
                        +------+-----------------+---------+


                    Ex 1:-
                      select customer.cust_name, department.d_name from customer  # Iss case me Customer ko table 1 banaya hai tab output  ye hai
                      left join department                                        # yaha Department ko Table2 banaya hai
                      on customer.cust_id = department.cust_id;
                        +-----------+-----------------+
                        | cust_name | d_name          |
                        +-----------+-----------------+
                        | Abhishek  | Django          |
                        | Abhishek  | Machine Learing |
                        | Vidhi     | Java Script     |
                        | Vipin     | Angular JS      |
                        | Akshara   | HR-Admin        |
                        | Surbhi    | HR-General      |
                        | Ankita    | NULL            |
                        +-----------+-----------------+



                    Ex 2:-
                      select customer.cust_name, department.d_name from department   # Iss case me Department ko table 1 banaya hai tab output  ye hai
                      left join customer                                             # yaha Department ko Table2 banaya hai
                      on customer.cust_id = department.cust_id;
                        +-----------+-----------------+
                        | cust_name | d_name          |
                        +-----------+-----------------+
                        | Abhishek  | Django          |
                        | Abhishek  | Machine Learing |
                        | Vidhi     | Java Script     |
                        | Vipin     | Angular JS      |
                        | Akshara   | HR-Admin        |
                        | Surbhi    | HR-General      |
                        +-----------+-----------------+







          2) Right Outer Join / Right Join :-Right Join Keyword returns all row from Right Table, with the Matching Rows in
                                             Left Table.
                                            There is Return Null in the Left Side when there is no Match Rows
                                            Right Outer Join the Table that comes before the Join is the Right Table,and the Table that
                                            come after the Join is Left Table That is Right Outer Table..

                Syntax:- SELECT table_name.col_name1,table_name.col_name2,... from Table1   # This case table 1 is called Right Table
                         RIGHT JOIN table2                                                  # Table2 is called Left table
                         ON col_name = col_name;


                         Ex 1:- # Yaha par RIGHT JOIN ka Ex 1 and LEFT JOIN ka Ex 2 same hai, Isse find hota hai ki agar Table ki position
                                  ko Change kar diya jay to LEFT or RIGHT JOIN ka behavior bhi change ho jayega.. That means
                                  agar LEFT Join me Table ki postion ko change kar de to Left Join Right Join ki tarah kaam karne lagega
                                  same isska ulta hai Right Join ke liye bhi hai

                            select customer.cust_name, department.d_name from department
                            right join customer
                            on customer.cust_id = department.cust_id;
                            +-----------+-----------------+
                            | cust_name | d_name          |
                            +-----------+-----------------+
                            | Abhishek  | Django          |
                            | Abhishek  | Machine Learing |
                            | Vidhi     | Java Script     |
                            | Vipin     | Angular JS      |
                            | Akshara   | HR-Admin        |
                            | Surbhi    | HR-General      |
                            | Ankita    | NULL            |
                            +-----------+-----------------+


                         Ex 2:-
                            select customer.cust_name, department.d_name from customer
                            right join department
                            on customer.cust_id = department.cust_id;
                            +-----------+-----------------+
                            | cust_name | d_name          |
                            +-----------+-----------------+
                            | Abhishek  | Django          |
                            | Abhishek  | Machine Learing |
                            | Vidhi     | Java Script     |
                            | Vipin     | Angular JS      |
                            | Akshara   | HR-Admin        |
                            | Surbhi    | HR-General      |
                            +-----------+-----------------+



          3) Full Outer Join / Full Join :- Full Outer Join is return al rows from the LEFT TABLE and from the RIGHT TABLE;

                 Syntax:-SELECT table_name.col_name1,table_name.col_name2,... from Table1   # Iss Case me tabl1 and table2 ka full Record/Rows display hoga..
                         FULL JOIN table2
                         ON col_name = col_name;






4) What is SELF JOIN?
Ans)

        Syntax :-
                SELECT col_name1,col_name2.. from table




          Ex 1 :-
             1st Step :-  Create an Table
                 create table Manager
                 (
                 Emp_id int not null auto_increment primary key,
                 Name varchar (50) not null,
                 Manag_id int (50)
                 );

             2nd Step :- Insert
                insert into Manager
                values(1,'Amit',3),
                (2,'Sourav',3),
                (3,'Himanshu',4),
                (4,'Nikita',6),
                (5,'Tanzila',6),
                (6,'Tehsin',8),
                (7,'Sabia',8),
                (8,'Kalindi',12),
                (9,'Sagufta',12),
                (10,'Aakash',12),
                (11,'Abhinav',12),
                (12,'Abhishek',Null);

             3rd Step :- SELF JOIN ko likhne ke type
                1st Type :-
                     select e.name Name,m.name Manager
                     from Manager e
                     inner join Manager m
                     on e.Emp_id = m.Manag_id;  # yaha par manager column me Name print ho rha hai job ki hmko Manager col me Manager_Name chahiye tha
                          +----------+----------+
                          | Name     | Manager  |
                          +----------+----------+
                          | Himanshu | Amit     |
                          | Himanshu | Sourav   |
                          | Nikita   | Himanshu |
                          | Tehsin   | Nikita   |
                          | Tehsin   | Tanzila  |
                          | Kalindi  | Tehsin   |
                          | Kalindi  | Sabia    |
                          | Abhishek | Kalindi  |
                          | Abhishek | Sagufta  |
                          | Abhishek | Aakash   |
                          | Abhishek | Abhinav  |   #  yaha par ek baat aur dhyaan walihai wo ye hai ki ABHISHEK ke col me Null value nhi
                          +----------+----------+      display ho rha hai, kyoki Abhishek ka koi bhi manager nhi hai,but iss pt ko nhi show kiya.. Iss liye ham Inner join ki jagah par LEFT/RIGHT Join ka use kareng
                                                       Left/Right Join ka use karne ka benefit ye milega ki ABHISHEK column ke data ho bhi display karega.. To dekhte hai kya hota hai Ex 3 me

                2st Type :-
                     select e.name Name,m.name Manager
                     from Manager e
                     inner join Manager m
                     on e.Manag_id = m.Emp_id ;
                          +----------+----------+
                          | Name     | Manager  |
                          +----------+----------+
                          | Amit     | Himanshu |
                          | Sourav   | Himanshu |
                          | Himanshu | Nikita   |
                          | Nikita   | Tehsin   |
                          | Tanzila  | Tehsin   |
                          | Tehsin   | Kalindi  |
                          | Sabia    | Kalindi  |
                          | Kalindi  | Abhishek |
                          | Sagufta  | Abhishek |
                          | Aakash   | Abhishek |
                          | Abhinav  | Abhishek |
                          +----------+----------+

                3rd Type :-
                     select e.name Name,m.name Manager
                     from Manager e
                     left join Manager m
                     on e.Manag_id = m.Emp_id ;  # Iss me dekh skte hai ki ABHISHEK wale column ko bhi display kar rha hai ABHISHEK = NULL
                          +----------+----------+
                          | Name     | Manager  |
                          +----------+----------+
                          | Amit     | Himanshu |
                          | Sourav   | Himanshu |
                          | Himanshu | Nikita   |
                          | Nikita   | Tehsin   |
                          | Tanzila  | Tehsin   |
                          | Tehsin   | Kalindi  |
                          | Sabia    | Kalindi  |
                          | Kalindi  | Abhishek |
                          | Sagufta  | Abhishek |
                          | Aakash   | Abhishek |
                          | Abhinav  | Abhishek |
                          | Abhishek | NULL     |
                          +----------+----------+

                4th Type :- How to Remove Null Value and put Something values
                  ANS) IFNULL Function :- Yaha par ifnull me col_value null hogi to ifnull func hmko data return karega jo data ham
                                                 ifnull me set kar rhe hote hai like ifnull(m.name,'Onwer'), agr m.name ke 'ABHISHEK' COL me Value
                                                 Null hui to IFNULL Func Onwer value ko return kar dega..

                     select e.name Name,ifnull(m.name,'Onwer') manager
                     from Manager e
                     left join Manager m
                     on e.Manag_id = m.Emp_id ;
                          +----------+----------+
                          | Name     | manager  |
                          +----------+----------+
                          | Amit     | Himanshu |
                          | Sourav   | Himanshu |
                          | Himanshu | Nikita   |
                          | Nikita   | Tehsin   |
                          | Tanzila  | Tehsin   |
                          | Tehsin   | Kalindi  |
                          | Sabia    | Kalindi  |
                          | Kalindi  | Abhishek |
                          | Sagufta  | Abhishek |
                          | Aakash   | Abhishek |
                          | Abhinav  | Abhishek |
                          | Abhishek | Onwer    |
                          +----------+----------+

                  Ans 2) COALESCE FUNCTION :-  Coalesce Function me ham ek se jada value bhi Insert kar skte hai but IFNULL me ek se jada nhi kar skte
                     select e.name Name,COALESCE(m.name,'Onwer') manager
                     from Manager e
                     left join Manager m
                     on e.Manag_id = m.Emp_id ;
                          +----------+----------+
                          | Name     | manager  |
                          +----------+----------+
                          | Amit     | Himanshu |
                          | Sourav   | Himanshu |
                          | Himanshu | Nikita   |
                          | Nikita   | Tehsin   |
                          | Tanzila  | Tehsin   |
                          | Tehsin   | Kalindi  |
                          | Sabia    | Kalindi  |
                          | Kalindi  | Abhishek |
                          | Sagufta  | Abhishek |
                          | Aakash   | Abhishek |
                          | Abhinav  | Abhishek |
                          | Abhishek | Onwer    |
                          +----------+----------+





                5th Type :-
                     select s2.emp_name name , s2.emp_address address
                     from pratikshat s1
                     left join pratikshat s2
                     on s1.emp_address = s2.emp_address and s1.emp_name = 'Ankit';
                          +---------+---------+
                          | name    | address |
                          +---------+---------+
                          | Ankit   | Delhi   |
                          | Kalindi | Delhi   |
                          +---------+---------+






6) What is UNION UNION ALL?
Ans) UNION :-

        Syntax :-
               SELECT column_name1 from Table1   # Union me imp ye hai ki column_name1 ka jo DATATYPE hoga wahi DATATYPE column_name5 ka bhi hona chahiye like (varchar hai to dono culum ka datatype varchar hi hona chahiye)
               Union                             # Union me Order bhi maintained hona chahiye mtlb table1 me agr int hai to Table5 me bhi int hona chahiye
               SELECT column_name5 from Table2   # Union me no of col dono table me same hona chahiye,mtlb agr Table1 me 2 col use kar rhe hai to table5 me bhi 2 col hi use hoga

          Ex 1:-
             select cust_name from customer    # Yaha par Duplicate or Repeated values ko remove kar de rha hai
             union
             select s_name from seller
             union
             select Name from manager;
                    +-----------+
                    | cust_name |
                    +-----------+
                    | Abhishek  |
                    | Vidhi     |
                    | Vipin     |
                    | Akshara   |
                    | Surbhi    |
                    | Ankita    |
                    | Amit      |
                    | Sourav    |
                    | Himanshu  |
                    | Nikita    |
                    | Tanzila   |
                    | Tehsin    |
                    | Sabia     |
                    | Kalindi   |
                    | Sagufta   |
                    | Aakash    |
                    | Abhinav   |
                    +-----------+

          Ex 2:- Mujhe Data ko Increasing/Decreasing Order me display karna hai tab kya karenge..<Using ORDER BY>
             select cust_name as Employee_Name from customer
             union
             select s_name as Employee_Name from seller
             union
             select Name as Employee_Name from manager order by Employee_Name;
                    +---------------+
                    | Employee_Name |
                    +---------------+
                    | Aakash        |
                    | Abhinav       |
                    | Abhishek      |
                    | Akshara       |
                    | Amit          |
                    | Ankita        |
                    | Himanshu      |
                    | Kalindi       |
                    | Nikita        |
                    | Sabia         |
                    | Sagufta       |
                    | Sourav        |
                    | Surbhi        |
                    | Tanzila       |
                    | Tehsin        |
                    | Vidhi         |
                    | Vipin         |
                    +---------------+



UNION ALL :-

     Ex :-
       select cust_name as Employee_Name from customer
       union all
       select s_name as Employee_Name from seller
       union all
       select Name as Employee_Name from manager order by Employee_Name;

                      +---------------+
                      | Employee_Name |
                      +---------------+
                      | Aakash        |
                      | Aakash        |
                      | Abhinav       |
                      | Abhinav       |
                      | Abhishek      |
                      | Abhishek      |
                      | Akshara       |
                      | Amit          |
                      | Amit          |
                      | Ankita        |
                      | Himanshu      |
                      | Himanshu      |
                      | Kalindi       |
                      | Kalindi       |
                      | Nikita        |
                      | Nikita        |
                      | Sabia         |
                      | Sabia         |
                      | Sagufta       |
                      | Sagufta       |
                      | Sourav        |
                      | Sourav        |
                      | Surbhi        |
                      +---------------+







1) ORDER BY
SELECT * from pratikshat order by emp_joining,emp_name;
+--------+----------+----------------+---------+-------------+------------+-------------+
| emp_id | emp_name | emp_dept       | emp_sal | emp_joining | emp_cell   | emp_address |
+--------+----------+----------------+---------+-------------+------------+-------------+
|    101 | Harish   | Owner & CEO    | 3500000 | 2012-07-22  | 9891901121 | Himachal    |
|    102 | Ankit    | General Mn.    | 1000000 | 2012-10-05  | 94774544   | Delhi       |
|    103 | Roshan   | Project Mn.    |  100000 | 2013-07-05  | 94544      | Bihar       |
|    109 | Adib     | Java           |   35000 | 2016-04-22  | 7474586    | Jaipur      |
|    112 | Abhshek  | Python-Machine |   25000 | 2017-03-22  | 6665478    | Agar        |
|    113 | Naveen   | Andriod        |   25000 | 2017-05-04  | 33554864   | Bhopal      |
|    106 | Sagufta  | java           |   35000 | 2018-03-22  | 7545       | Kanpur      |
|    108 | Samir    | Java           |   15000 | 2018-04-22  | 22878686   | Bihar       |
|    107 | Pawan    | HTML Frantend  |   20000 | 2019-02-14  | 755788555  | Gaziabad    |
|    105 | Kalindi  | Java           |   10000 | 2019-07-05  | 945774     | Delhi       |
|    110 | Harish   | Java           |    8000 | 2020-01-22  | 5578686    | Ahmedabad   |
|    104 | Abhshek  | Python-Django  |   35000 | 2020-07-22  | 9415058209 | Lucknow     |
|    111 | Avinash  | IOT            |    8000 | 2020-10-22  | 557864556  | Mumbai      |
+--------+----------+----------------+---------+-------------+------------+-------------+